<?php

class SubsidioController extends ApplicationController {

    public function indexAction(){
      $this->setResponse("ajax");
    }
//DATOS EMPRESAS    
    public function certificadoAfiliacionEmpresa_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Certificado de Afiliacion');
    }
// Certificado de afiliacion de empresas
    public function certificadoAfiliacionEmpresaAction(){
        $this->setResponse("ajax");
        $perini = $this->getPostParam("perini");
        $perfin = $this->getPostParam("perfin");
        $fecha = new Date();
        if($perini>$fecha->getYear().$fecha->getMonth()){
            $formu = parent::errorFunc("El periodo inicial no puede ser futuro");
            return $this->renderText(json_encode($formu)); 
        }
        $formu = new FPDF('P','mm','A4');
        $formu->AddPage();
        $formu->SetFillColor(236,248,240); 
        $formu->SetFont('Arial','','12');
        $formu->Cell(15,4,"iDF-07-20921",0,1,"L",0,0);
        $formu->Image('public/img/comfamiliar-logo.jpg',5,5,77,22);
        $idmer20 = $this->Mercurio20->findBySql("SELECT MAX(id) as id FROM mercurio20");
        $mercurio20 = $this->Mercurio20->findBySql("SELECT * FROM mercurio20 WHERE id='{$idmer20->getId()}'");
        $fecha20 = $mercurio20->getFecha();
        $hora20 = $mercurio20->getHora();
        $codbar = $idmer20->getId()."-".$mercurio20->getDocumento();
        $formu->Codabar(120,10,$codbar);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','B','12');
        $formu->Cell(190,4,html_entity_decode("LA COORDINADORA DE GESTI&Oacute;N DE RECAUDO DE APORTES"),0,1,"C",0,0);
        $formu->Cell(190,4,"DE COMFAMILIAR HUILA",0,0,"C",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"CERTIFICA QUE",0,0,"C",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','','11');
        if(Session::getDATA('estado')=='A'){
            $estado= "Activo";
        }else{
            $estado= "Inactivo";
        }
        $maxper=0;
        $minper=0;
        $valapo=0;
        $porapo=0;
        $result = parent::webService("Aporte",array('nit'=>Session::getDATA('documento'),'perini'=>$perini,'perfin'=>$perfin));
        if($result != false){
            foreach($result as $mresult){
                $porapo =  $mresult['porapo']; 
                if($minper==0) $minper = $mresult['periodo']; 
                $per = $mresult['periodo'];
                $valapo = round($mresult['valapo']);
                if($maxper <= $per){
                    $maxper = $per;
                    $valapo = round($mresult['valapo']);
                }
            }
        }
        $formu->MultiCell(190,4,html_entity_decode("La empresa ".Session::getDATA('nombre')."  identificada con Nit. No ".number_format(Session::getDATA('documento'),0,'.','.').", se encuentra en estado ".$estado." en nuestro sistema y cancel&oacute; Aportes Parafiscales del (".number_format($porapo,0,'.','.')."%) ".Session::getDATA('nomcaj')." por los periodos de $minper hasta $maxper "),0,"J",0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','','9');
        $formu->Cell(190,4,"Anexo: Kardex de aportes",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->MultiCell(190,4,html_entity_decode('"La expedici&oacute;n de este documento no impide que Comfamiliar Huila pueda realizar visitas de verificaci&oacute;n de la correcta y oportuna liquidaci&oacute;n de los aportes, bases de liquidaci&oacute;n y el pago oportuno de los mismos. (Decreto 562/90).'),0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,html_entity_decode('"ESTE CERTIFICADO NO ES VALIDO PARA EFECTOS DE AFILIACION A OTRA CAJA DE COMPENSACI&Oacute;N."'),0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"La presente se expide a los {$fecha->getDay()} dias de {$fecha->getMonthName()} de {$fecha->getYear()} ",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $y = $formu->getY(); 
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','B','9');
        $formu->Image('public/img/firmas/firmaMariaIsabelMariaIsabel.png',80,$y,60,18);
        $formu->Cell(190,4,"MARIA ISABEL DIAZ GARZON",0,1,"C",0,0);
        $formu->Cell(190,4,"COORDINADORA RECAUDO DE APORTES",0,1,"C",0,0);
        $formu->Image('public/img/portal/piepaginaCartas.png',0,255,210,42);
        $formu->Ln();

        $formu->AddPage();
        $formu->SetFillColor(236,248,240); 
        $formu->SetFont('Arial','','12');
        $formu->Cell(15,4,"iDF-07-20921",0,1,"L",0,0);
        $formu->Image('public/img/comfamiliar-logo.jpg',5,5,77,22);
        $idmer20 = $this->Mercurio20->findBySql("SELECT MAX(id) as id FROM mercurio20");
        $mercurio20 = $this->Mercurio20->findBySql("SELECT * FROM mercurio20 WHERE id='{$idmer20->getId()}'");
        $fecha20 = $mercurio20->getFecha();
        $hora20 = $mercurio20->getHora();
        $codbar = $idmer20->getId()."-".$mercurio20->getDocumento();
        $formu->Codabar(120,10,$codbar);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','B','12');
        $formu->Cell(190,4,html_entity_decode("LA COORDINADORA DE GESTI&Oacute;N DE RECAUDO DE APORTES"),0,1,"C",0,0);
        $formu->Cell(190,4,"DE COMFAMILIAR HUILA",0,0,"C",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"KARDEX DE APORTES",0,0,"C",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->setX(10);
        $formu->SetFont('Arial','B','10');
        $formu->Cell(5,7,"#",1,0,"C",0,0);
        $formu->Cell(17,7,"Tipo",1,0,"C",0,0);
        $formu->Cell(17,7,"Recibo",1,0,"C",0,0);
        $formu->Cell(17,7,"Periodo",1,0,"C",0,0);
        $formu->Cell(25,7,"Nomina",1,0,"C",0,0);
        $formu->Cell(25,7,"Aporte",1,0,"C",0,0);
        $formu->Cell(25,7,"Mora",1,0,"C",0,0);
        $formu->Cell(20,7,"Indice",1,0,"C",0,0);
        $formu->Cell(20,7,"Empleados",1,0,"C",0,0);
        $formu->Cell(20,7,"Fecha Pago",1,1,"C",0,0);
        if($result != false){
            $orden = 1;
            $l = 1;
            foreach($result as $mresult){
                $fecpag = date("Y-m-d",strtotime($mresult['fecpag']));
                if($mresult['valapo']=="")$mresult['valapo']=0;
                if($mresult['valint']=="")$mresult['valint']=0;
                if($mresult['valnom']=="")$mresult['valnom']=0;
                $formu->setX(10);
                $formu->SetFont('Arial','','8');
                $l++;
                $formu->Cell(5,7,$orden++,1,0,"C",0,0);
                $formu->Cell(17,7,"",1,0,"C",0,0);
                $formu->Cell(17,7,$mresult['numrec'],1,0,"C",0,0);
                $formu->Cell(17,7,$mresult['periodo'],1,0,"C",0,0);
                $formu->Cell(25,7,"$ ".number_format($mresult['valnom'],0,'.','.'),1,0,"R",0,0);
                $formu->Cell(25,7,"$ ".number_format($mresult['valapo'],0,'.','.'),1,0,"R",0,0);
                $formu->Cell(25,7,"$ ".number_format($mresult['valint'],0,'.','.'),1,0,"R",0,0);
                $formu->Cell(20,7,number_format($mresult['porapo'],0,'.','.'),1,0,"C",0,0);
                $formu->Cell(20,7,$mresult['traapo'],1,0,"C",0,0);
                $formu->Cell(20,7,$fecpag,1,1,"C",0,0);
                if($l>20){
                    $l=0;
                    $formu->AddPage();
                    $formu->SetFillColor(236,248,240); 
                    $formu->SetFont('Arial','','12');
                    $formu->Cell(15,4,"iDF-07-20921",0,1,"L",0,0);
                    $formu->Image('public/img/comfamiliar-logo.jpg',5,5,77,22);
                    $idmer20 = $this->Mercurio20->findBySql("SELECT MAX(id) as id FROM mercurio20");
                    $mercurio20 = $this->Mercurio20->findBySql("SELECT * FROM mercurio20 WHERE id='{$idmer20->getId()}'");
                    $fecha20 = $mercurio20->getFecha();
                    $hora20 = $mercurio20->getHora();
                    $codbar = $idmer20->getId()."-".$mercurio20->getDocumento();
                    $formu->Codabar(120,10,$codbar);
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->SetFont('Arial','B','12');
                    $formu->Cell(190,4,html_entity_decode("LA COORDINADORA DE GESTI&Oacute;N DE RECAUDO DE APORTES"),0,1,"C",0,0);
                    $formu->Cell(190,4,"DE COMFAMILIAR HUILA",0,0,"C",0,0);
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Cell(190,4,"KARDEX DE APORTES",0,0,"C",0,0);
                    $formu->Ln();
                    $formu->Ln();
                    $formu->Ln();
                    $formu->setX(10);
                    $formu->SetFont('Arial','B','10');
                    $formu->Cell(5,7,"#",1,0,"C",0,0);
                    $formu->Cell(17,7,"Tipo",1,0,"C",0,0);
                    $formu->Cell(17,7,"Recibo",1,0,"C",0,0);
                    $formu->Cell(17,7,"Periodo",1,0,"C",0,0);
                    $formu->Cell(25,7,"Nomina",1,0,"C",0,0);
                    $formu->Cell(25,7,"Aporte",1,0,"C",0,0);
                    $formu->Cell(25,7,"Interes",1,0,"C",0,0);
                    $formu->Cell(20,7,"Indice",1,0,"C",0,0);
                    $formu->Cell(20,7,"Empleados",1,0,"C",0,0);
                    $formu->Cell(20,7,"Fecha Pago",1,1,"C",0,0);
                }
            }
        }
        $formu->Ln();
        $formu->Ln();
        $y = $formu->getY(); 
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','B','9');
        $formu->Image('public/img/firmas/firmaMariaIsabelMariaIsabel.png',75,$y,60,18);
        $formu->Cell(190,4,"MARIA ISABEL DIAZ GARZON",0,1,"C",0,0);
        $formu->Cell(190,4,"COORDINADORA RECAUDO DE APORTES",0,1,"C",0,0);
        $formu->Image('public/img/portal/piepaginaCartas.png',0,255,210,42);
        $formu->Ln();


        $this->setResponse('view');
        $file = "public/temp/reportes/empresa_e".Session::getDATA('documento').".pdf";
        ob_clean();
        $formu->Output( $file,"F");
        $formu = parent::successFunc("Genera Formulario",$file);
        $this->renderText(json_encode($formu)); 
    }
    //Consulta de trabajadores
    public function conemptra_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Trabajadores de la Empresa');
    }
    public function conemptraAction(){
        $this->setResponse("ajax");
        $estad = $this->getPostParam('estado');
        $param = array("nit"=>Session::getDATA('documento'),"tipo"=>$estad);
        $response = "";
        $response .="<br>";
        $response .="<br>";
        $response .="<br>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td colspan=10> Los trabajadores con estado pendiente por legalizar. Son trabajadores que deben de terminar su afiliacion hacia la caja. </td>";
        $response .="</tr>";
        $response .="</table>";
        $response .="</br>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td> # </td>";
        $response .="<td> C&eacute;dula </td>";
        $response .="<td>Nombre</td>";
        $response .="<td>Salario</td>";
        //$response .="<td>Sexo</td>";
        //$response .="<td>Fecha Nacimiento</td>";
        $response .="<td>Fecha Ingreso</td>";
        $response .="<td>Estado</td>";
        $response .="<td>Fecha Retiro</td>";
        $response .="<td>Categoria</td>";
        $response .="</tr>";
        $result = parent::webService("Conemptra", $param);
        $total=1;
        if($result!=false){
            foreach($result as $mresult){
                $salario = number_format($mresult['salario'],0,".",".");
                //$fecnac = str_replace("12:00:00 AM","",$mresult['fecnac']);
                //$fecafi = str_replace("12:00:00 AM","",$mresult['fecafi']);
                $fecnac = date("Y-m-d",strtotime($mresult['fecnac']));
                $fecafi = date("Y-m-d",strtotime($mresult['fecafi']));
                if($mresult['estado']=="A")$estado='ACTIVO';
                if($mresult['estado']=="I")$estado='INACTIVO';
                if($mresult['estado']=="P")$estado='PENDIENTE LEGALIZAR';
                $fecest="";
                if($mresult['fecest']!="")
                    $fecest = date("Y-m-d",strtotime($mresult['fecest']));
                $response .="<tr>";
                $response .="<td>".($total++)."</td>";
                $response .="<td>{$mresult['cedtra']}</td>";
                $response .="<td>{$mresult['nombre']}</td>";
                $response .="<td>$ {$salario}</td>";
                //$response .="<td>{$mresult['sexo']}</td>";
                //$response .="<td>{$fecnac}</td>";
                $response .="<td>{$fecafi}</td>";
                $response .="<td>{$estado}</td>";
                $response .="<td>{$fecest}</td>";
                if($estado=="ACTIVO")
                    $response .="<td>{$mresult['codcat']}</td>";
                else
                    $response .="<td>&nbsp;</td>";
                $response .="</tr>";
            }
        }
        $response .="</table>";
        return $this->renderText(json_encode($response));
        //echo $response;
    }
    //Reporte en excel de trabajadores 
    public function conemptra_repAction($estado){
        $fecha = new Date();
        $this->setResponse('view');
        $param = array("nit"=>Session::getDATA('documento'),"tipo"=>$estado);
        $file = "public/temp/"."reporte_trab".$fecha->getUsingFormatDefault().".xls";
        require_once "Library/Excel/Main.php";
        $excels = new Spreadsheet_Excel_Writer($file);
        $excel = $excels->addWorksheet();
        $column_title = $excels->addFormat(array('fontfamily' => 'Verdana',
                    'size' => 12,
                    'fgcolor' => 50,
                    'border' => 1,
                    'bordercolor' => 'black',
                    "halign" => 'center'
                    ));
        $title = $excels->addFormat(array(   'fontfamily' => 'Verdana',
                    'size' => 13,
                    'border' => 0,
                    'bordercolor' => 'black',
                    "halign" => 'center'
                    ));
        $column_style = $excels->addFormat(array(   'fontfamily' => 'Verdana',
                    'size' => 11,
                    'border' => 1,
                    'bordercolor' => 'black',
                    ));
        $excel->setMerge(0,0,0,6);

                if($estado=="A")$estado='ACTIVO';
                if($estado=="I")$estado='INACTIVO';
                if($estado=="P")$estado='PENDIENTE LEGALIZAR';
        $excel->write(0,0,'Reporte De Trabajadores '.$estado.' ',$title);
        $columns = array('#','Cedula','Nombre','Salario','Fecha Ingreso','Estado','Fecha Retiro','Categoria');
        $excel->setColumn(0,0,10);
        $excel->setColumn(1,1,15);
        $excel->setColumn(2,2,45);
        $excel->setColumn(3,6,20);
        $i = 0;
        $j = 2;
        foreach($columns as $column){
            $value = ucfirst($column);
            $excel->write($j, $i++, $value, $column_title);
        }
        $j++;
        $result = parent::webService("Conemptra", $param);
        if($result!=false){
            $total=1;
            foreach($result as $mresult){
                $i = 0;
                $salario = $mresult['salario'];
                $fecafi = date("Y-m-d",strtotime($mresult['fecafi']));
                $estado="";
                if($mresult['estado']=="A")$estado='ACTIVO';
                if($mresult['estado']=="I")$estado='INACTIVO';
                if($mresult['estado']=="P")$estado='PENDIENTE LEGALIZAR';
                $fecest="";
                if($mresult['fecest']!="")
                    $fecest = date("Y-m-d",strtotime($mresult['fecest']));
                $excel->write($j, $i++,$total++, $column_style);
                $excel->write($j, $i++,$mresult['cedtra'], $column_style);
                $excel->write($j, $i++,$mresult['nombre'], $column_style);
                $excel->writeString($j, $i++,number_format($salario,0,'.','.'), $column_style);
                $excel->write($j, $i++,$fecafi, $column_style);
                $excel->write($j, $i++,$estado, $column_style);
                $excel->write($j, $i++,$fecest, $column_style);
                if($estado=="ACTIVO")
                    $excel->write($j, $i++,$mresult['codcat'], $column_style);
                else
                    $excel->write($j, $i++,"", $column_style);
                $j++;
            }
        }
        $fecha = new Date();
        $excels->close();
        header("location: ".Core::getInstancePath()."/{$file}");
    }
    //Consulta de mora empresas
    public function moremp_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta Mora');
        $nit = Session::getDATA('documento');
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Periodo</td>";
        $response .="<td>Valor</td>";
        $response .="</tr>";
        $morosa = parent::webService("Morosa",array("nit"=>$nit));
        if($morosa !=false){
            foreach($morosa as $mresult){
                $mresult = preg_split("/-/",$mresult['periodo']);
                $response .="<tr>";
                $response .="<td>{$mresult[0]}</td>";
                $response .="<td>$ ".number_format($mresult[1],0,'.','.')."</td>";
                $response .="</tr>";
            }
        }
        echo $response;
    }
    //Consulta de kit escolar empresas
    public function kitEscolarEmp_viewAction() {
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Kit Escolar Empresa');
    }
    public function kitEscolarEmpAction() {
        $this->setResponse("ajax");
        $ano = $this->getPostParam("ano");
        $param = array("nit"=>Session::getDATA('documento'),"anno"=>$ano);
        $response = "";
        $response .="<div>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>A&ntilde;o</td>";
        $response .="<td>Fecha Entrega</td>";
        $response .="<td>Entregado</td>";
        $response .="</tr>";
        $estado = "NO";
        $result = parent::webService("KitescolarEmp", $param);
        if($result!=false){
            foreach($result as $mresult){
                $fecest = str_replace("12:00:00 AM","",$mresult['fecest']);
                if($mresult['estado']=="S")$estado="SI";
                $response .="<tr>";
                $response .="<td>{$mresult['ano']}</td>";
                $response .="<td>{$fecest}</td>";
                $response .="<td>{$estado}</td>";
                $response .="</tr>";
            }
        }
        $response .="</table>";
        $response .="</div>";
        return $this->renderText(json_encode($response));
    }
    //Consulta de giro emoresas
    public function giroEmp_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Giro Empresa');
    }
    public function giroEmpAction(){
        $this->setResponse("ajax");
        $periodo = $this->getPostParam("periodo");
        $response = "";
        $response .="<div align='center'>";
        $response .="<table class='resultado-sec' border=1 style='width: 70%;'>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Periodo Girado</td>";
        $response .="<td>Cedula Trabajador</td>";
        $response .="<td>Nombre Tabajador</td>";
        $response .="<td>Valor</td>";
        $response .="</tr>";
        $param = array("nit"=>Session::getDATA('documento'),"periodo"=>$periodo);
        $result = parent::webService("Giroemp", $param);
        $total = 0;
        if($result!=false){
            foreach($result as $mresult){
                //$cedcon = $mresult['cedcon'];
                //$paramcon =  array("documento"=>$cedcon);
                $valor = "$ ".number_format($mresult['valor'],0,".",".");
                //$valcre = number_format($mresult['valcre'],0,".",".");
                $response .="<tr>";
                $response .="<td>{$mresult['pergir']}</td>";
                $response .="<td>{$mresult['cedtra']}</td>";
                //$response .="<td>{$mresult['periodo']}</td>";
                $response .="<td align='left'>{$mresult['nombre']}</td>";
                $response .="<td align='right'>{$valor}</td>";
                $total = $total + $mresult['valor'];
                $response .="</tr>";
            }
            $response .="</tr>";
            $response .="<td colspan='3' align='right'> Total : </td>";
            $response .="<td align='right'>$ ".number_format($total,0,'.','.')."</td>";
            $response .="</tr>";
        } 
        $response .="</table>";
        $response .="</div>";
        return $this->renderText(json_encode($response));
    }
    //Actializacion de datos empresa-trabajador
    public function actdat_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Actualización Datos Básicos');
        $mercurio28 = $this->Mercurio28->find("tipo = '".Session::getDATA('tipo')."'","order: orden ASC");
        foreach($mercurio28 as $mmercurio28){
            $campos[$mmercurio28->getCampo()] = $mmercurio28->getDetalle();
        }
        if(Session::getDATA('tipo')=="T")$titulo = "Datos del Trabajador";
        if(Session::getDATA('tipo')=="E")$titulo = "Datos de la Empresa";
        if(Session::getDATA('tipo')=="C")$titulo = "Datos del Conyuge";
        $result = parent::webService('Infobasica',array("tipo"=>Session::getDATA('tipo'),"documento"=>SESSION::getDATA('documento')));
        $result[0]['fax'] = "";
        $ciu = $result[0]['codciu'];
        $dep = substr($ciu,0,2);
        $barr= $result [0]['idbarrio'];
        $barrios = parent::webService('Barrios',array());
        foreach($barrios as $mbarrios ){
            $_barrios[$mbarrios['idbarrio']] = $mbarrios['detalle'];
        }
        $codciu = parent::webservice('ciudades',array());
        foreach($codciu as $mcodciu){
            $_codciu[$mcodciu['codciu']] = $mcodciu['detalle'];
        }
        $depart = parent::webService('departamento',array());
        foreach($depart as $mdepart ){
            $_depart[$mdepart['coddep']] = $mdepart['detalle'];
        }
        $tipo = Session::getDATA('tipo');
        $html  = "";
        $html .= "<tr>";
        $html .="<td colspan=6><strong>$titulo</strong></td>";
        $html .= "</tr>";
        $html .= "<tr>";
        foreach($campos as $key => $value){
            $html .= "<tr>";
            if($key!='codciu' && $key!='idciucorresp')
                $html .= "<td><label>{$value}</label></td>";
            $value = "value: ";
            if($result!=false){
                $value = "value: {$result[0][$key]}";
            }
            if($tipo=='E'){
                if($key == 'codciu'){
                    $html .= "<td><b>Departamento</b></td>";
                    $html .= "<td>".Tag::selectStatic("coddep",$_depart,"style: width: 174px","useDummy: yes","value: $dep","onchange: traerCiudad()")."</td>";
                    $html .= "<td><b>Ciudad</b></td>";
                    $html .= "<td>".Tag::selectStatic("codciu",$_codciu,"style: width: 174px","useDummy: yes","value: $ciu")."</td>";
                }
                if($key == 'idciucorresp'){
                    $html .= "<td><b>Departamento Correspondencia</b></td>";
                    $html .= "<td>".Tag::selectStatic("iddepcorresp",$_depart,"style: width: 174px","useDummy: yes","value: $dep","onchange: traerCiudad2()")."</td>";
                    $html .= "<td><b>Ciudad Correspondencia</b></td>";
                    $html .= "<td>".Tag::selectStatic("idciucorresp",$_codciu,"style: width: 174px","useDummy: yes","value: $ciu")."</td>";
                }
                if($key == 'direccion'){
                    $html .= "<td> ".Tag::numericField($key,$value,"readonly: true","style: width: 300px; margin-left: 0px; ")."";
                    $html .="".Tag::Button("Cambiar",'class: submit','style: width: 100px; height: 20px; background-color: rgba(41,121,219,1)  ',"onclick: cambiarDireccion('direccion');")."</td>";
                }
                if($key == 'direcorresp'){
                    $html .= "<td> ".Tag::numericField($key,$value,"readonly: true","style: width: 300px; margin-left: 0px; ")."";
                    $html .="".Tag::Button("Cambiar",'class: submit','style: width: 100px; height: 20px; background-color: rgba(41,121,219,1)  ',"onclick: cambiarDireccion('direcorresp');")."</td>";
                }

                if($key == 'telefono' || $key=="fax"){
                    $html .= "<td>".Tag::numericField($key,$value," maxlength: 10","onkeydown: validaPuntos();")."</td>";
                }
                if($key=="email"){
                    $html .= "<td colspan='7'>".Tag::textField($key,$value,"onchange: validaemail();","style: width: 400px;")."</td>";
                }
            }
            if($tipo=='T'){
                if($key == 'codciu'){
                    $html .= "<td><b>Departamento</b></td>";
                    $html .= "<td>".Tag::selectStatic("coddep",$_depart,"style: width: 174px","useDummy: yes","value: $dep","onchange: traerCiudad()")."</td>";
                    $html .= "<td><b>Ciudad</b></td>";
                    $html .= "<td>".Tag::selectStatic("codciu",$_codciu,"style: width: 174px","useDummy: yes","value: $ciu")."</td>";
                }

                if($key == 'direccion'){
                    $html .= "<td> ".Tag::numericField($key,$value,"readonly: true","style: width: 300px; margin-left: 0px; ")."";
                    $html .="".Tag::Button("Cambiar",'class: submit','style: width: 100px; height: 20px; background-color: rgba(41,121,219,1)  ',"onclick: cambiarDireccion('direccion');")."</td>";
                }
                if($key == 'telefono'){
                    $html .= "<td colspan='7'>".Tag::numericField($key,$value," maxlength: 10","onkeydown: validaPuntos();")."</td>";
                }
                if($key=="email"){
                    $html .= "<td colspan='7'>".Tag::textField($key,$value,"onchange: validaemail();","style: width: 400px;")."</td>";
                }
                if($key=='celular'){
                    $html .= "<td colspan='7'>".Tag::numericField($key,$value," maxlength: 10","onkeydown: validaPuntos();")."</td>";
                }
            }
            $html .= "</tr>";
        }
        $html .= "";
        $this->setParamToView("html", $html);
        $this->setParamToView("barr",$barr);
        $this->setParamToView("barrio",$_barrios);
        $this->setParamToView("dep",$dep);
        $this->setParamToView("coddep",$_depart);
        $this->setParamToView("ciu",$ciu);
        $this->setParamToView("codciu",$_codciu);
        $this->setParamToView("campos",$campos);
        $this->setParamToView("tipo",$tipo);
    }

    public function cambiarDireccionAction(){
        $this->setResponse("ajax");
        $campo = $this->getPostParam("campo");
        $html  ="";
        $html .="<table class='resultado-sec' border='1'>";
        $html .="<tr >";
        $html .= "<td>".Tag::selectStatic("prim",array("CALLE"=>"CALLE","CARRERA"=>"CARRERA","AVD"=>"AVENIDA","AUT"=>"AUTOPISTA","TRANSVERSAL"=>"TRANSVERSAL","DIAGONAL"=>"DIAGONAL"),"onchange: uneDireccion()")."</td>";
        $html .= "<td>".Tag::numericField("segu"," maxlength: 3","style: width: 30px;","onchange: uneDireccion()")."</td>";
        $abc[""] = "";
        $abc["A"] = "A";
        $abc["B"] = "B";
        $abc["C"] = "C";
        $abc["D"] = "D";
        $abc["E"] = "E";
        $abc["F"] = "F";
        $abc["G"] = "G";
        $abc["H"] = "H";
        $abc["I"] = "I";
        $abc["J"] = "J";
        $abc["K"] = "K";
        $abc["L"] = "L";
        $abc["M"] = "M";
        $abc["N"] = "N";
        $abc["O"] = "O";
        $abc["P"] = "P";
        $abc["Q"] = "Q";
        $abc["R"] = "R";
        $abc["S"] = "S";
        $abc["T"] = "T";
        $abc["U"] = "U";
        $abc["V"] = "V";
        $abc["X"] = "X";
        $abc["Y"] = "Y";
        $abc["Z"] = "Z";
        $html .= "<td>".Tag::selectStatic("ter",$abc,"onchange: uneDireccion()")."</td>";
        $html .= "<td>".Tag::selectStatic("cuar",array(""=>"","BIS"=>"BIS"),"onchange: uneDireccion()")."</td>";
        $html .= "<td>".Tag::selectStatic("quin",array(""=>"","WEST"=>"WEST","SUR"=>"SUR"),"onchange: uneDireccion()")."</td>";
        $html .= "<td><label> No. :</label></td>";
        $html .= "<td>".Tag::numericField("seis"," maxlength: 3","style: width: 30px;","onchange: uneDireccion()")."</td>";
        $html .= "<td>".Tag::selectStatic("siete",$abc,"onchange: uneDireccion()")."</td>";
        $html .= "<td>".Tag::selectStatic("ocho",array(""=>"","BIS"=>"BIS"),"onchange: uneDireccion()")."</td>";
        $html .= "<td><label> - </label></td>";
        $html .= "<td>".Tag::selectStatic("nue",array(""=>"","WEST"=>"WEST","SUR"=>"SUR"),"onchange: uneDireccion()")."</td>";
        $html .= "<td>".Tag::numericField("diez"," maxlength: 3","style: width: 30px;","onchange: uneDireccion()")."</td>";
        $html .="</tr>";
        $html .="<tr>";
        $html .= "<td colspan=14> <b>Resumen Direccion:</b> ".Tag::numericField("direccion_online","readonly: true","style: width: 300px; margin-left: 0px; ")."</td>";
        $html .="</tr>";
        $html .="<tr>";
        $html .="<td colspan=14 align='center'>".Tag::Button("Confirmar Direccion ",'class: submit','style: width: 300px; ',"onclick: confirmarDireccion('$campo');")."</td>";
        $html .="</tr>";
        $html .="</table>";
        return $this->renderText(json_encode($html));
    }

    //Novedad de retiro    
    public function novret_viewAction(){
        $this->setResponse("ajax");
        $codare = $this->getPostParam("codare");
        $codope = $this->getPostParam("codope");
        echo parent::showTitle('Novedades de Retiro Trabajador');
        $codest = parent::webService("CodigoEstado",array());
        foreach($codest as $mcodest){
            $_codest[$mcodest['coddoc']] = $mcodest['detalle'];
        }
        $this->setParamToView("codest", $_codest);

        $this->setParamToView("codare", $codare);
        $this->setParamToView("codope", $codope);
    }
    public function novretAction(){
        $cedtra = $this->getPostParam("cedtra","addslaches","extraspaces","striptags");
        $nit = Session::getDATA('documento');
        $this->setResponse("ajax");
        $response = "";
        $response .="<table class='resultado-sec' border='1'>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>C&eacute;dula</td>";
        $response .="<td>Nombre</td>";
        $response .="<td>Salario</td>";
        $response .="<td>Sexo</td>";
        $response .="<td>Fecha Nacimiento</td>";
        $response .="<td>Direccion</td>";
        $response .="<td>Telefono</td>";
        $response .="<td>Fecha Ingreso</td>";
        $response .="</tr>";
        $result = parent::webService("DatosTrabajador",array("nit"=>$nit,"cedtra"=> $cedtra));
        if($result!=false){
            foreach($result as $mresult){
                $fecafi = date("Y-m-d",strtotime($mresult['fecafi']));
                $fecnac = date("Y-m-d",strtotime($mresult['fecnac']));
                $response .="<tr>";
                $response .="<td>{$mresult['cedtra']}</td>";
                $response .="<td>{$mresult['nombre']}</td>";
                $response .="<td>".number_format($mresult['salario'],0,".",".")."</td>";
                $response .="<td>{$mresult['sexo']}</td>";
                $response .="<td>{$fecnac}</td>";
                $response .="<td>{$mresult['direccion']}</td>";
                $response .="<td>{$mresult['telefono']}</td>";
                $response .="<td>{$fecafi}</td>";
                $response .="</tr>";
            }
        }else{
            $response = parent::errorFunc("El trabajador no esta afiliado con la empresa o ya se encuentra retirado");
            return $this->renderText(json_encode($response));
        }
        $response .="</table>";
        $response = parent::successFunc("bien",$response);
        return $this->renderText(json_encode($response));
    }
    //Consulta de nomina
    public function nomina_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Nomina');
    }
    public function nominaAction(){
        $this->setResponse("ajax");
        $periodo  = $this->getPostParam('periodo');
        $response = "";
        $response .="<br>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr cellspacing='10'>";
        $response .="<td colspan=17>
            <table>
            <tr>
                <td align='left'><b>ING</b>=>INGRESO</td>
                <td align='left'><b>RET</b>=>RETIRO</td>
                <td align='left'><b>VST</b>=>VARIACION SALARIAL TEMPORAL </td>
            </tr>
            <tr>
                <td align='left'><b>VSP</b>=>VARIACION SALARIAL PERMANENTE </td>
                <td align='left'><b>STC</b>=>SUSPENCION TEMPORAL CONTRATO</td>
                <td align='left'><b>ITE</b>=>INCAPACIDAD TEMPORAL ENFERMEDAD</td>
            </tr>
            <tr>
                <td align='left'><b>LM</b>=>LICENCIA MATERNIDAD </td>
                <td align='left'><b>VAC</b>=>VACACIONES </td>
                <td align='left'><b>ITAT</b>=>INCAPACIDAD TEMPORAL ACCIDENTE DE TRABAJO</td>
            </tr>
            </table>
            </td>";
        $response .="</tr'>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>#</td>";
        $response .="<td>C&eacute;dula</td>";
        $response .="<td>Nombre</td>";
        $response .="<td>Porcentaje Aporte</td>";
        $response .="<td>Dias Trabajados</td>";
        $response .="<td>Salario</td>";
        $response .="<td>Valor Aporte</td>";
        $response .="<td>IBC</td>";
        $response .="<td>ING</td>";
        $response .="<td>RET</td>";
        $response .="<td>VST</td>";
        $response .="<td>VSP</td>";
        $response .="<td>STC</td>";
        $response .="<td>ITE</td>";
        $response .="<td>LM</td>";
        $response .="<td>VAC</td>";
        $response .="<td>ITAT</td>";
        $response .="</tr>";
        $total = 0;
        $result = parent::webService("Nomina",array("nit"=>Session::getDATA('documento'),"periodo"=>$periodo));
        if($result!=false){
            $total = 0;
            foreach($result as $mresult){
                $total++;
                $novedad = "";
                $salario = number_format($mresult['salario'],0,".",".");
                $valapo  = number_format($mresult['valapo'],0,".",".");
                $response .="<tr>";
                $response .="<td>{$total}</td>";
                $response .="<td>{$mresult['cedtra']}</td>";
                $response .="<td>{$mresult['nombre']}</td>";
                $response .="<td>{$mresult['porapor']}</td>";
                $response .="<td>{$mresult['diacot']}</td>";
                $response .="<td>{$salario}</td>";
                $response .="<td>{$valapo}</td>";
                $response .="<td>{$mresult['icbf']}</td>";
                $response .="<td>{$mresult['noving']}</td>";
                $response .="<td>{$mresult['novret']}</td>";
                $response .="<td>{$mresult['novtrasa']}</td>";
                $response .="<td>{$mresult['novpersal']}</td>";
                $response .="<td>{$mresult['novsuscon']}</td>";
                $response .="<td>{$mresult['novinc']}</td>";
                $response .="<td>{$mresult['novmat']}</td>";
                $response .="<td>{$mresult['novvac']}</td>";
                $response .="<td>{$mresult['novtemtra']}</td>";
                $response .="</tr>";
            }
        }
        $response .="</table>";
        return $this->renderText(json_encode($response));
    }
    //Consulta de aportes
    public function aportes_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Aporte');     
    }
    public function aportesAction(){
        $this->setResponse("ajax");
        $perini = $this->getPostParam("perini","addslaches","alpha","extraspaces","striptags");
        $perfin = $this->getPostParam("perfin","addslaches","alpha","extraspaces","striptags");
        $response = "";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Recibo</td>";
        $response .="<td>Periodo</td>";
        $response .="<td>Valor N&oacute;mina</td>";
        $response .="<td>Valor Aporte</td>";
        $response .="<td>Valor Interes</td>";
        $response .="<td>Valor Total</td>";
        $response .="<td>Indice</td>";
        $response .="<td>Trabajadores</td>";
        $response .="<td>Fecha Pago</td>";
        $response .="</tr>";
        $result = parent::webService("Aporte",array('nit'=>Session::getDATA('documento'),'perini'=>$perini,'perfin'=>$perfin));
        if($result!=false){
            foreach($result as $mresult){
                $tota=0;
                $total=0;
                $razsoc = session::getData('nombre');
                $fecpag = date("Y-m-d",strtotime($mresult['fecpag']));
                $valnom = number_format($mresult['valnom'],0,".",".");
                $valapo = number_format($mresult['valapo'],0,".",".");
                $valint = number_format(round($mresult['valint']),0,".",".");
                $response .="<tr>";
                $response .="<td>{$mresult['numrec']}</td>";
                $response .="<td>{$mresult['periodo']}</td>";
                $response .="<td>$ {$valnom}</td>";
                $response .="<td>$ {$valapo}</td>";
                $response .="<td>$ {$valint}</td>";
                $tota= $mresult['valapo']+$mresult['valint'];
                $total = number_format(round($tota),0,".",".");
                $response .="<td>$ {$total}</td>";
                $response .="<td>".number_format($mresult['porapo'],0,".",".")."</td>";

                $response .="<td>{$mresult['traapo']}</td>";
                $response .="<td>{$fecpag}</td>";
                $response .="</tr>";
            }
        }
        $response .="</table>";
        $response .="</div>";
        return $this->renderText(json_encode($response));
    }

// DATOS TRABAJADOR
    public function nucfam_viewAction(){
      $this->setResponse("ajax");
      echo parent::showTitle('Consulta de Nucleo Familiar');
      $param = array("cedtra"=>Session::getData('documento'));
      //$param = array("cedtra"=>"36288242");
      $result = parent::webService("Nucfamtrabajador", $param);
      if($result == false){
          $result = parent::webService("Nucfamtrabajadorina", $param);
      }
      $response = "";
      if($result != false ){
          $trafecafi = date("Y-m-d",strtotime($result[0]['trafecafi']));
          $trafecret = date("Y-m-d",strtotime($result[0]['trafecret']));
          $salario = number_format($result[0]['trasalario'],0,".",".");
          $estad = "Activo";
          //if($result[0]['traestado']!="A")$estad = "Inactivo";
          $response .= "<div>";
          $response .= "<table style='width: 100%; margin-top: 20px;'>";
          $response .= "<tr>";
          $response .= "<td><strong>C&eacute;dula</strong></td><td>{$result[0]['tracedtra']}</td>";
          $response .= "<td><strong>Nombre</strong></td><td>{$result[0]['tranombre']}</td>";
          $response .= "<td><strong>Estado</strong></td><td>{$estad}</td>";
          $response .= "</tr>";
          $response .= "<tr>";
          $response .= "<td><strong>Fecha Afiliaci&oacute;n</strong></td><td>{$trafecafi}</td>";
          $response .= "<td><strong>Salario</strong></td><td>$ {$salario}</td>";
          $response .= "</tr>";
          $response .= "<tr>";
          $response .= "<td><strong>Categor&iacute;a</strong></td><td>{$result[0]['tracodcat']}</td>";
          $response .= "<td><strong>Direcci&oacute;n</strong></td><td>{$result[0]['tradireccion']}</td>";
          $response .= "<td><strong>Tel&eacute;fono</strong></td><td>{$result[0]['tratelefono']}</td>";
          $response .= "</tr>";
          $response .= "</table>";
          $response .= "</div>";
          $result = parent::webService("Nucfamconyuge", $param);
          $idcony = $result[0]['conyuge'];
          if($result!=false){
              $result = parent::webService("DatosConyuje",array("documento"=>$idcony));
              if($result != false){
                  $paramcon = array("documento"=> $idcony);
                  $response .= "<div><hr width='100%'><strong>Conyuge(s)</strong><hr width='100%'></div>";
                  $response .= "<div>";
                  $response .= "<table class='resultado-sec' border='1' cellpadding='5' style='border-collapse: collapse; width: 100%;'>";
                  $response .= "<thead class='tr-result'>";
                  $response .= "<th>C&eacute;dula</th>";
                  $response .= "<th>Nombre</th>";
                  $response .= "<th>Estado</th>";
                  $response .= "<th>Fecha Afiliaci&oacute;n</th>";
                  $response .= "<th>Fecha Retiro</th>";
                  $response .= "<th>Salario</th>";
                  $response .= "<th>Direcci&oacute;n</th>";
                  $response .= "<th>Tel&eacute;fono</th>";
                  $response .= "</thead>";
                  foreach ($result as $rresult) {
                      //Debug::addVariable("a",$rresult);
                      //throw new DebugException(0);  
                      if($result==false)continue;
                      $fecaficon = date("Y-m-d",strtotime($rresult['fecafi']));
                      $fecretcon = date("Y-m-d",strtotime($rresult['fecret']));
                      $salario = number_format($rresult['salario'],0,".",".");
                      $estadocon= "Activo(a)";
                      if($rresult['estado']!= "A")$estadocon="Inactivo";
                      $response .= "<tbody>";
                      $response .= "<tr style='text-align: center;'>";
                      $response .= "<td>{$rresult['documento']}</td>";
                      $response .= "<td>{$rresult['nombre']}</td>";
                      $response .= "<td>{$estadocon}</td>";
                      $response .= "<td>{$fecaficon}</td>";
                      $response .= "<td>{$fecretcon}</td>";
                      $response .= "<td>$ {$salario}</td>";
                      $response .= "<td>{$rresult['direccion']}</td>";
                      $response .= "<td>{$rresult['telefono']}</td>";
                      $response .= "</tr>";
                      $response .= "</tbody>";
                  }
                  $response .= "</table>";
                  $response .= "</div>";
              }
          }
          $result = parent::webService("Nucfambeneficiarios", $param);      
          if($result!=false){
              $response .= "<div><hr width='100%'><strong>Beneficiario(s)</strong><hr width='100%'></div>";
              $response .= "<div>";
              $response .= "<table class='resultado-sec' border='1' cellpadding='5' style='border-collapse: collapse; width: 100%;'>";
              $response .= "<thead class='tr-result'>";
              $response .= "<th>Documento</th>";
              $response .= "<th>Nombre</th>";
              $response .= "<th>Fecha Afiliacion</th>";
              $response .= "<th>Fecha de Inactivacion</th>";
              $response .= "<th>Parentesco</th>";
              $response .= "<th>Fecha Nacimiento</th>";
              $response .= "<th>Estado</th>";
              $response .= "</thead>";
              foreach ($result as $mresult) {
                  $benef = $mresult['beneficiario'];
                  $datben = parent::webService("Datosfamiliar",array("documento"=>$benef));      
                  $parent="";
                  switch($datben[0]['parent']){
                      case 35:
                          $parent="HIJO(A)";
                          break;
                      case 36:
                          $parent="PADRE/MADRE";
                          break;
                      case 37:
                          $parent="HERMANO(A)";
                          break;
                      case 38:
                          $parent="HIJASTRO(A)";
                          break;
                  }
                  $fecafi = date("Y-m-d",strtotime($datben[0]['fecafi']));
                  $fecnac = date("Y-m-d",strtotime($datben[0]['fecnac']));
                  $fecret = "";
                  if($datben[0]['captra']!="A"){
                      $fecret = date("Y-m-d",strtotime($datben[0]['fecret']));
                  }
                  $response .= "<tr style='text-align: center;'>";
                  $response .= "<td>{$datben[0]['documento']}</td>";
                  $response .= "<td>{$datben[0]['nombre']}</td>";
                  $response .= "<td>{$fecafi}</td>";
                  $response .= "<td>{$fecret} </td>";
                  $response .= "<td>{$parent}</td>";
                  $response .= "<td>{$fecnac}</td>";
                  $response .= "<td>{$datben[0]['captra']}</td>";
                  $response .= "</tr>";
                  $response .= "</tbody>";
              }
              $response .= "</table>";
              $response .= "</div>";
          }
      }
      echo $response;
    }
    //Consulta de kitescolar        
    public function kitEscolar_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Kit Escolar');
        $param = array("cedtra"=>Session::getDATA('documento'));
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Año</td>";
        $response .="<td>Nombre</td>";
        $response .="<td>Fecha Entrega</td>";
        $response .="<td>Entregado</td>";
        $response .="</tr>";
        $result = parent::webService("KitescolarTra", $param);
        if($result!=false){
            foreach($result as $mresult){
                $datben = parent::webService("Datosfamiliar",array("documento"=>$mresult['beneficiario']));      
                $fecest ="";
                $estado="No";
                if($mresult['estado'] == "S"){
                    $estado="SI";
                    $fecest = date("Y-m-d",strtotime($mresult['fecest']));
                }
                $response .="<tr>";
                $response .="<td>{$mresult['ano']}</td>";
                $response .="<td>{$datben[0]['nombre']}</td>";
                $response .="<td>{$fecest}</td>";
                $response .="<td>{$estado}</td>";
                $response .="</tr>";
            }
        }else{
            $response .="<tr>";
            $response .="<td colspan='4'> No Presentan Registros de Kid Escolar </td>";
            $response .="</tr>";
        }
        $response .="</tr>";
        $response .="</table>";
        $response .="</div>";
        echo $response;
    }
    //Consulta de giro

    public function giro_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Giros');     
    }

    public function giroAction(){
        $this->setResponse("ajax");
        $anno = $this->getPostParam('anno');
        $param = array("cedtra"=>Session::getData('documento'),"anno"=>$anno);
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Periodo Girado</td>";
        $response .="<td>Documento</td>";
        $response .="<td>Nombre Benadiciario</td>";
        $response .="<td>Razon Social Empresa</td>";
        $response .="<td>Valor Neto</td>";
        $response .="<td>Valor Descuentos</td>";
        $response .="<td>Valor Pagado</td>";
        $response .="</tr>";
        $total=0;
        $result = parent::webService("Giro", $param);
        if($result!=false){
            foreach($result as $mresult){
                $benef = $mresult['codben'];
                $datben = parent::webService("Datosfamiliar",array("documento"=>$benef));      
                $valor = number_format($mresult['valor'],0,".",".");
                $valcre = number_format($mresult['valcre'],0,".",".");
                $response .="<tr>";
                $response .="<td>{$mresult['pergir']}</td>";
                $response .="<td>{$datben[0]['documento']}</td>";
                $response .="<td>{$datben[0]['nombre']}</td>";
                $response .="<td>{$mresult['nit']}</td>";
                $response .="<td>$ {$valor}</td>";
                $response .="<td>$ {$valcre}</td>";
                $valorpag = ($mresult['valor'])-($mresult['valcre']);
                $valorpago = number_format($valorpag,0,".",".");
                $response .="<td>$ {$valorpago}</td>";
                $response .="</tr>";
                $total = $total + $mresult['valor'];
            }
        }else{
            $response .="<tr>";
            $response .="<td colspan= '8'> No presenta periodos girados </td>";
            $response .="</tr>";
        }
        $response .="<tr>";
        $response .="<td> Total :</td>";
        $total = number_format($total,0,".",".");
        $response .="<td>$ $total </td>";
        $response .="</tr>";
        $response .="</table>";
        $response .="</div>";
        return $this->renderText(json_encode($response));
    }

    //Consulta de no giro
    public function nogiro_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de No Giro');
        $param = array("cedtra"=>Session::getDATA('documento'),"cedcon"=>"","documento"=>"");
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Periodo Girado</td>";
        $response .="<td>Razon Social</td>";
        $response .="<td>Doc. Beneficiario</td>";
        $response .="<td>Nombre Beneficiario</td>";
        $response .="<td>Motivo</td>";
        $response .="</tr>";
        $result = parent::webService("Nogiro", $param);
        if($result!=false){
            foreach($result as $mresult){
                //Debug::addVariable("a",$mresult);
                //throw new DebugException(0);    
                $benef = $mresult['codben'];
                $datben = parent::webService("Datosfamiliar",array("documento"=>$benef));      
                $response .="<tr>";
                $response .="<td>{$mresult['pergir']}</td>";
                $response .="<td>{$mresult['periodo']}</td>";
                $response .="<td>{$datben[0]['documento']}</td>";
                $response .="<td>{$datben[0]['nombre']}</td>";
                $response .="<td>{$mresult['detalle']}</td>";
                $response .="</tr>";
            }
        }else{
            $response .="<tr>";
            $response .="<td colspan= '5'>No presenta periodos no girados </td>";
            $response .="</tr>";
        }
        echo $response;
    }
    //Consulta Mivimiento tarjetas
    public function saldoTarjeta_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Consulta de Movimientos');     
    }
    public function saldoTarjetaAction(){
        $this->setResponse("ajax");
        $estado = "Inactivo"; 
        $fecini = $this->getPostParam("fecini");
        $fecfin = $this->getPostParam("fecfin");
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>No. Tajeta</td>";
        $response .="<td>Transaccion</td>";
        $response .="<td>Valor</td>";
        $response .="<td>Fecha Movimiento </td>";
        $response .="</tr>";
        $param = array("cedtra"=>Session::getDATA('documento'),"fecini"=>$fecini,"fecfin"=>$fecfin);
        $result = parent::webService("ConsultaTarjeta", $param);
        $histar = parent::webService("HistoricoTarjeta", array("cedtra"=>Session::getDATA('documento')));
        $saldo = number_format($histar[0]['saldo'],0,".",".");
        if($result!=false){
            foreach($result as $mresult){
                $fecha = date("Y-m-d",strtotime($mresult['fecha']));
                $valor = number_format($mresult['valor'],0,".",".");
                $response .="<tr>";
                $response .="<td>{$mresult['tarjeta']}</td>";
                $response .="<td>{$mresult['detalle']}</td>";
                $response .="<td>$ {$valor}</td>";
                $response .="<td>{$fecha}</td>";
                $response .="</tr>";
            }        
        }else{
            $response .="<tr>";
            $response .="<td colspan='4'> No Presentan Movimientos de Tarjetas</td>";
            $response .="</tr>";
        }
        $response .="<tr>";
        $response .="<td> Saldo :</td>";
        $response .="<td>$ $saldo </td>";
        $response .="</tr>";

        $response .="</table>";
        $response .="</div>";
        return $this->renderText(json_encode($response));
    }
//Historico de tarjetas
    public function historicoTarjeta_viewAction(){
        parent::showTitle('Consulta de Historico de Tarjetas');     
        $estado = "Inactivo"; 
        $entr="No";
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Numero Tarjeta</td>";
        $response .="<td>Fecha Expedicion</td>";
        $response .="<td>Fecha Solicitud</td>";
        $response .="<td>Fecha Entrega</td>";
        $response .="<td>Entregada</td>";
        $response .="<td>Estado</td>";
        $response .="<td>Saldo</td>";
        $response .="</tr>";
        $param = array("cedtra"=>Session::getDATA('documento'));
        $result = parent::webService("HistoricoTarjeta", $param);
        if($result!=false){
            foreach($result as $mresult){
                $fecexp = date("Y-m-d",strtotime($mresult['fecexp']));
                $fecsol = date("Y-m-d",strtotime($mresult['fecsol']));
                $fecent = date("Y-m-d",strtotime($mresult['fecent']));
                $fecven = date("Y-m-d",strtotime($mresult['fecven']));
                $saldo = number_format($mresult['saldo'],0,".",".");
                if($mresult['estado'] == "A")$estado="Activo";
                if($mresult['entregada'] == "S")$entr="Si";
                $response .="<tr>";
                $response .="<td>{$mresult['numtar']}</td>";
                $response .="<td>{$fecexp}</td>";
                $response .="<td>{$fecsol}</td>";
                $response .="<td>{$fecent}</td>";
                $response .="<td>{$entr}</td>";
                $response .="<td>{$estado}</td>";
                $response .="<td>$ {$saldo}</td>";
                $response .="</tr>";
            }        
        }else{
            $response .="<tr>";
            $response .="<td  colspan='7'> No Presentan Historico de Tarjetas</td>";
            $response .="</tr>";

        }
        $response .="</table>";
        $response .="</div>";

        echo $response;
    }
//Consulta de planilla trabajador
    public function planillaTra_viewAction(){
        parent::showTitle('Consulta de Planilla');     
        $response = "";
        $response .="<br>";
        $response .="<div class='resultado-prin'>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Raz&oacute;n Social</td>";
        $response .="<td>Periodo</td>";
        $response .="<td>Valor Aporte</td>";
        //$response .="<td>Valor Consignada</td>";
        $response .="<td>Valor Interes</td>";
        $response .="<td>Fecha Pago</td>";
        $response .="</tr>";
        $param = array("cedtra"=>Session::getDATA('documento'));
        $result = parent::webService("PlanillaTra", $param);
        if($result!=false){
            foreach($result as $mresult){
                $fecha = date("Y-m-d",strtotime($mresult['fecrec']));
                $valnom = number_format(round($mresult['valnom']));
                $valcon = number_format(round($mresult['valcon']));
                $valint = number_format(round($mresult['valint']));
                $response .="<tr>";
                $response .="<td>{$mresult['razsoc']}</td>";
                $response .="<td>{$mresult['perapo']}</td>";
                //$response .="<td>{$valcon}</td>";
                $response .="<td>$ {$valnom}</td>";
                $response .="<td>$ {$valint}</td>";
                $response .="<td>{$fecha}</td>";
                $response .="</tr>";
            }        
        }
        $response .="</table>";
        $response .="</div>";

        echo $response;
    }
//Certificados Trabajador
    public function certificadoAfiliacion_viewAction(){
      $this->setResponse("ajax");
      echo parent::showTitle('Certificado de Afiliacion');
      $param  = array("cedtra"=>Session::getData('documento'));
      $benefic = parent::webService("Nucfambeneficiarios", $param);      
      $this->setParamToView("benefic",$benefic);
    }
    public function generarCertificadosAction(){
        $this->setResponse("ajax");
        $tipfor = $this->getPostParam("tipfor");
        $param  = array("cedtra"=>Session::getData('documento'));
        $result = parent::webService("Nucfamtrabajador", $param);
        $datemp = parent::webService("DatosEmpTra", $param);

        $fecaf = date("Y-m-d",strtotime($result[0]['trafecafi']));
        $fecafi = new Date($fecaf);
        $fecha  = new Date();
        $fecret = ""; 
        switch($tipfor){
            case"a":
                //texto carta afiliacion
                $texto = "Me permito certificar que el(la) se&ntilde;or(a)  ".SESSION::getDATA('nombre')."  identificado(a) con c&eacute;dula de ciudadan&iacute;a No.  ".SESSION::getDATA('documento').",  se encuentra afiliado(a) a nuestra Entidad desde el ".$fecafi->getDay()." ".$fecafi->getMonthName()." de ".$fecafi->getYear()." en la modalidad de SERVICIO por intermedio de la empresa ".$datemp[0]['razsoc'].". Nit No. ".$datemp[0]['nit']." con Fecha de Ingreso ".$fecafi->getDay()." ".$fecafi->getMonthName()." de ".$fecafi->getYear().".";
                $texto2="";
                break;
            case"b":
                //texto carta afiliado inactivo
                $texto = "Me permito certificar que el(la) se&ntilde;or(a) ".SESSION::getDATA('nombre')." identificado(a) con la c&eacute;dula de Ciudadan&iacute;a No. ".SESSION::getData('documento').", se encuentra INACTIV(A) en nuestro Sistema desde el (dia retiro) de (nombre mes retiro) de (anno retiro).";
                $texto2="";
                break;
            case"c":
                //texto carta afiliado con categoria
                $texto = utf8_decode("Me permito certificar que el(la) se&ntilde;or(a) ".SESSION::getDATA('nombre')." identificado(a) con c&eacute;dula de ciudadan&iacute;a No. ".SESSION::getDATA('documento').", se encuentra afiliado(a) a nuestra Entidad en la modalidad de SUBSIDIO por intermedio de la empresa ".$datemp[0]['razsoc']."  Nit No. ".$datemp[0]['nit'].", desde el ".$fecafi->getDay()." ".$fecafi->getMonthName()." de ".$fecafi->getYear()." y su categor&iacute;a tarifaria se establece como Categor&iacute;a ".SESSION::getData('categoria').".");
                break;
            case"d":
                //texto carta afiliado con trayectoria
                $texto = "Con el fin de dar respuesta a su solicitud del asunto, comedidamente me permito informarle que el(la) se&ntilde;or(a) ".Session::getDATA('nombre')." identificado(a) con c&eacute;dula de ciudadan&iacute;a No. ".SESSION::getDATA('documento').", estuvo afiliada a nuestra Entidad por intermedio de la siguiente empresa as&iacute;:";
                
                //$texto2 = "Actualmente se encyentra afiliado(a) a nuestra Entidad desde el ".$fecafi->getDay()." de ".$fecafi->getMonthName()." de ".$fecafi->getYear()." en la modalidad de SUBSIDIO por intermedio de la empresa ".$datemp[0]['razsoc']." Nit No. ".$datemp[0]['nit']." con fecha de ingreso ".$fecafi->getDay()." dec ".fecafi->getMonthName()." de ".$fecafi->getYear().".";
                break;
            case"e":
                //texto carta afiliado con ultima trayectoria
                $texto = "Me permito certificar que el(la) se&ntilde;ora ".SESSION::getDATA('nombre')." identificado con c&Eacute;dula de ciudadan&iacute;a No. ".SESSION::getDATA('documento').", estuvo afiliada a nuestra Entidad por intermedio de la siguiente empresa as&iacute;:";
                break;
            case"f":
                if($fecret == "")$fecret = $fecha;
                //$texto = "Me permito certificar que la se&ntilde;ora ".SESSION::getDATA('nombre')." identificada con c&eacute;dula de ciudadani&iacute;a No. ".SESSION::getData('documento').", estuvo afiliada a nuestra Entidad por intermedio de la Empresa ".$datemp[0]['razsoc'].". en ".SESSION::getData('categoria').". Nit.".$detemp[0]['nit'].", durante los per&iacute;odos del ".$fecafi->getDay()." dec ".fecafi->getMonthName." de ".$fecafi->getYear()." hasta el ".$fecret->getDay()." de ".$fecret->getMonthName()." de ".$fecret->getYear().".";
                break;
            case"g":
                //texto carta afiliado con beneficiarios
                $texto = "Me permito certificar que el(la) se&ntilde;or(a) ".SESSION::getDATA('nombre')." identificado(a) con la c&eacute;dula No. ".SESSION::getDATA('documento').", se encuentra afiliado(a) a nuestra Entidad en la modalidad de SERVICIOS por intermedio de la empresa ".$datemp[0]['razsoc']." Nit. ". $datemp[0]['nit']." con fecha de ingreso ".$fecing->getDay()." de ".$fecing->getMonthName()." de ".$fecafi->getYear()."y tiene como Beneficiarios a:";
                break;
            //case"h":
            //    $texto = "Me permito certificar que (nombre conyuge) se encuentra (estado beneficiario) desde el 11 de junio de 1998 como Beneficiaria (hija) de la señora ".SESSION::getDATA('nombre')." identificada con la cédula No. ".SESSION::getData.".";
            //   break;
            case"i":
                $texto = "Me permito certificar que el(la) se&ntilde;or(a) ".SESSION::getDATA('nombre')." identificado(a) con c&Eacute;dula de ciudadan&iacute;a No. ".SESSION::getData('documento').", se encuentra afiliado(a) a nuestra Entidad en la modalidad de SERVICIOS por intermedio de la empresa ".$datemp[0]['razsoc']." Nit No. ".$datemp[0]['nit'].", desde el ".$fecafi->getDay()." de ".$fecafi->getMonthName()." de ".$fecafi->getYear().".\n\n
Una vez revisada la informaci&oacute;n en nuestro sistema, hemos verificado que Seg&uacute;n nuestra base de datos No registra afiliaci&oacute;n de n&uacute;cleo familiar.";
                break;
            //case"j":
            //    $texto = utf8_decode("Me permito certificar que (nombre de beneficiario) se encuentra afiliada como Beneficiaria hija de la señora ".SESSION::getDATA('nombre')." identificada con cédula de ciudadanía No. ".SESSION::getDATA('documento').", desde el 4 de marzo de 2014 en la Modalidad de SERVICIOS y su categoría tarifaria se establece como Categoría ".SESSION::getData('categoria').".");
            //   break;
        }
        $response = parent::startFunc();
        $file = "";
        $file = self::certificado($texto);
    }
    public function certificado($texto){
        $fecha = new Date();
        $ano = $fecha->getYear();
        $mes = $fecha->getMonthName();
        $dia = $fecha->getDay();
        $formu = new FPDF('P','mm','Letter');
        $formu->SetMargins(20,25);
        $formu->AddPage();
        $formu->SetFillColor(236,248,240); 
        $formu->SetFont('Arial','','12');
        $formu->Ln();
        $formu->Cell(175,4,"DF-07-20921",0,1,"L",0,0);
        $formu->Image('public/img/comfamiliar-logo.jpg',10,15,63,18);
        $idmer20 = $this->Mercurio20->findBySql("SELECT MAX(id) as id FROM mercurio20");
        $mercurio20 = $this->Mercurio20->findBySql("SELECT * FROM mercurio20 WHERE id='{$idmer20->getId()}'");
        $fecha20 = $mercurio20->getFecha();
        $hora20 = $mercurio20->getHora();
        $codbar = $idmer20->getId()."-".$mercurio20->getDocumento();
        $formu->Codabar(140,10,$codbar);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(175,4,"DF-07-20921",0,1,"L",0,0);
        $formu->Cell(175,4,"Neiva, ".$dia." de ".$mes." de ".$ano,0,0,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(15,4,html_entity_decode("Se&ntilde;ores"),0,1,"L",0,0);
        $formu->SetFont('Arial','B','12');
        $formu->Cell(190,4,Session::getDATA("nombre"),0,1,"L",0,0);
        $formu->SetFont('Arial','','12');
        $formu->Cell(190,4,"Calle 19 40-41 B/ Centro",0,1,"L",0,0);
        $formu->Cell(190,4,"Telefono 8714243",0,1,"L",0,0);
        $formu->Cell(190,4,"NEIVA (HUILA)",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"Asunto: Certificado de Afiliacion.",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"Cordial Saludo.",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        //$estado = $estados[Session::getData('estado')];
        $formu->MultiCell(175,4,html_entity_decode("$texto"),0,"J",0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"Atentamente, ",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $y = $formu->getY(); 
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Image('public/img/firmas/firmaYazminOspina.png',15,$y,60,18);
        $formu->Cell(190,4,"YAZMIN OSPINA GAITAN ",0,1,"L",0,0);
        $formu->Cell(190,4,"COORDINADORA AFILIACIONES Y SUBSIDIO",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','','8');
        $formu->Cell(190,4,html_entity_decode("Y. OSPINA GAITAN / M.Y. MU&Ntilde;OZ LOZANO"),0,1,"L",0,0);
        $formu->Ln();
        $formu->Cell(190,4,html_entity_decode("Copia Interna: Centro de Documentaci&oacute;n e Informaci&oacute;n "),0,1,"L",0,0);
        $formu->Image('public/img/portal/piepaginaCartas.png',1,237,214,42);
        $formu->Ln();
        $this->setResponse('view');
        $file = "public/temp/reportes/trabajador_inact.pdf";
        ob_clean();
        $formu->Output( $file,"F");       
        $formu = parent::successFunc("Genera Formulario",$file);
        $this->renderText(json_encode($formu)); 
    }
// cambio de datos Principales
    public function cambioDatosPrincipales_viewAction(){
        $this->setResponse("ajax");
        echo parent::showTitle('Cambio Datos Principales');
        $nit = Session::getData('documento');
        $codare = $this->getPostParam("codare");
        $codope = $this->getPostParam("codope");
        $result  = parent::webService("DatosReprecentante",array("nit"=>$nit));
        $html  = "";
        $html .= "<tr>";
        $html .="<td colspan=6><strong>Datos Empresa</strong></td>";
        $html .= "</tr>";
        $html .= "<tr>";
        $html .= "<td> Nit </td>";
        $html .= "<td>".Tag::numericField("nit","value: ".Session::getData('documento'),"readonly: true")."</td>";
        $html .= "</tr>";
        $html .= "<tr>";
        $html .= "<td> Razon Social </td>";
        $html .= "<td>".Tag::textUpperField("razsoc","value: ".$result[0]['razsoc'],"style: width: 400px;" )."</td>";
        $html .= "</tr>";
        $html .= "<tr>";
        $html .="<td colspan=6><strong>Datos Representante</strong></td>";
        $html .= "</tr>";
        $html .= "<tr>";
        $html .= "<td> Documento </td>";
        $html .= "<td>".Tag::numericField("cedrep","value: ".$result[0]['cedrep'],"maxlength: 10","onkeydown: validaPuntos();")."</td>";
        $html .= "</tr>";
        $html .= "<tr>";
        $html .= "<td> Representante</td>";
        $html .= "<td>".Tag::textUpperField("nomrep","value: ".$result[0]['nomrep'],"style: width: 400px;","maxlength: 50","onkeydown: validaNumeros();")."</td>";
        $html .= "</tr>";
        $html .= "<tr>";
        $html .= "<td> Documento Camara de Comercio</td>";
        $html.= "<td colspan='2'>".Tag::fileField("archivo_camara","accept: application/pdf")."</td>";
        $html .= "</tr>";
        $this->setParamToView("html", $html);
        $this->setParamToView("codare", $codare);
        $this->setParamToView("codope", $codope);
    }

    public function cambioDatosPrincipalesAction(){
        try{
            try{
                $response = parent::startFunc();
                $modelos = array("mercurio43","mercurio21");
                $Transaccion = parent::startTrans($modelos);
                Session::setData('nota_audit',"Actualización de Datos Pincipales");
                $log_id = parent::registroOpcion();
                if($log_id==false)parent::ErrorTrans();
                $result = parent::webService('DatosReprecentante',array("nit"=>SESSION::getDATA('documento')));
                $campos = array("razsoc","cedrep","nomrep");
                $codare = $this->getPostParam("codare");
                $codope = $this->getPostParam("codope");
                $ruta_file = "";
                foreach($campos as $mcampos){
                    $valor = $this->getPostParam("{$mcampos}","addslaches","extraspaces","striptags");
                    if($result!=false){
                        if($result[0][$mcampos]==$valor)continue;
                    }
                    $mercurio43 = new Mercurio43();
                    $mercurio43->setTransaction($Transaccion);
                    $mercurio43->setId(0);
                    $mercurio43->setCodcaj(Session::getDATA('codcaj'));
                    $mercurio43->setDocumento(Session::getDATA('documento'));
                    $mercurio43->setCampo($mcampos);
                    $mercurio43->setValor($valor);
                    $mercurio43->setEstado("P");
                    $mercurio43->setLog($log_id);
                    $mercurio43->setUsuario(parent::asignarFuncionario($codare,$codope));

                    if(isset($_FILES['archivo_camara'])){
                        $_FILES["archivo_camara"]['name'] = $mercurio43->getLog()."_actprin_".substr($_FILES["archivo_camara"]['name'],-4);
                        $path = "public/files/";
                        $this->uploadFile("archivo_camara",getcwd()."/$path/");
                        $dd=pathinfo($_FILES["archivo_camara"]["name"]);
                        $archivo_nombre = $path.$dd['basename'];
                        $ruta_file[] = $archivo_nombre;
                        $mercurio43->setNomarc($archivo_nombre);
                    }
                    if(!$mercurio43->save()){
                        parent::setLogger($mercurio33->getMessages());
                        parent::ErrorTrans();
                    }
                }
                $asunto = "Nueva Actualización de DatosPrincipales  ".Session::getDATA("documento")." - ".Session::getDATA('nombre');
                $msg = "Cordial Saludos<br><br>Esta pendiente por actualizar los datos<br><br>";
                $msg .="<br><br>Atentamente,<br><br>MERCURIO";
                parent::enviarCorreo("Actualizacion datos Principales",  Session::getData("documento"), "", $asunto, $msg, $ruta_file);
                parent::finishTrans();
                return $this->redirect("principal/index/Actualizacion Exitosa, Pendiente por Aprobar");
            } catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        } catch (TransactionFailed $e) {
            return $this->redirect("principal/index/Error al Actualizar los Datos Principales");
        }


    }

//Certificados Empresa 
    public function certificadoAfiliacioniEmpresa_viewAction(){
      $this->setResponse("ajax");
      echo parent::showTitle('Certificado de Afiliacion Empresa');
      $param  = array("cedtra"=>Session::getData('documento'));
      $benefic = parent::webService("Nucfambeneficiarios", $param);      
      $this->setParamToView("benefic",$benefic);
    }
    public function generarCertificadosEmpresaAction(){
        $this->setResponse("ajax");
        $estado = "INACTIVO";
        if(Session::getData('estado') != "I") $estado="ACTIVO";
        $param  = array("nit"=>Session::getData('documento'));
        $result = parent::webService("AporteMaxfec", $param);      
        $texto = "no tiene ultima fecha de pago";
        if($result!=""){
            $fecpag = date("Y-m-d",strtotime($result[0]['fecpag']));
            $fecpag = new Date($fecpag);
            $texto = "La ultima fecha de pago de aportes es ".$fecpag->getDay()." de ".$fecpag->getMonthName()." de ".$fecpag->getYear();
        }
        $texto = "La empresa ".Session::getData('nombre').", identificada con Nit No. ".number_format(Session::getData('documento'),0,'.','.').", se encuentra afilada a nuestra Entidad como Aportante de Parafiscales en estado $estado. $texto";
        $formu = self::certificadoEmp($texto);
        $this->renderText(json_encode($formu)); 
    }

    public function certificadoEmp($texto){
        $fecha = new Date();
        $ano = $fecha->getYear();
        $mes = $fecha->getMonthName();
        $dia = $fecha->getDay();
        $formu = new FPDF('P','mm','Letter');
        $formu->SetMargins(20,25);
        $formu->AddPage();
        $formu->SetFillColor(236,248,240); 
        $formu->SetFont('Arial','','12');
        $formu->Ln();
        $formu->Cell(175,4,"DF-07-20921",0,1,"L",0,0);
        $formu->Image('public/img/comfamiliar-logo.jpg',10,15,63,18);
        $idmer20 = $this->Mercurio20->findBySql("SELECT MAX(id) as id FROM mercurio20");
        $mercurio20 = $this->Mercurio20->findBySql("SELECT * FROM mercurio20 WHERE id='{$idmer20->getId()}'");
        $fecha20 = $mercurio20->getFecha();
        $hora20 = $mercurio20->getHora();
        $codbar = $idmer20->getId()."-".Session::getDATA('documento');
        $formu->Codabar(115,20,$codbar);

        //$formu->Codabar(120,20,'123456789');
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','B','12');
        $formu->Cell(190,4,"LA COORDINADORA DE AFILIACIONES Y SUBSIDIO",0,1,"C",0,0);
        $formu->Ln();
        $formu->SetFont('Arial','B','12');
        $formu->Cell(190,4,"CERTIFICA QUE",0,1,"C",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        //$estado = $estados[Session::getData('estado')];
        $formu->SetFont('Arial','','11');
        $formu->MultiCell(175,4,html_entity_decode("$texto"),0,"J",0);
        $formu->Ln();
        $formu->SetFont('Arial','','8');
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->MultiCell(175,4,html_entity_decode("'ESTE CERTIFICADO NO ES VALIDO PARA AFILICIACION A OTRAS CAJAS DE COMPENSACION NI COMO SOPORTE DE PAGO DE PARAFISCALES POR CONTRATOS'"),0,"J",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->SetFont('Arial','','10');
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Cell(190,4,"La presente se expide a los {$fecha->getDay()} dias de {$fecha->getMonthName()} de {$fecha->getYear()} ",0,1,"L",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $y = $formu->getY(); 
        $formu->SetFont('Arial','B','10');
        $formu->Ln();
        $formu->Ln();
        $formu->Ln();
        $formu->Image('public/img/firmas/firmaYazminOspina.png',100,$y,35,15);
        $formu->Cell(190,4,"YAZMIN OSPINA GAITAN",0,1,"C",0,0);
        $formu->Cell(190,4,html_entity_decode("COORDINADORA AFILIACIONES Y SUBSIDIO"),0,1,"C",0,0);
        $formu->Ln();
        $formu->Ln();
        $formu->Image('public/img/portal/piepaginaCartas.png',1,237,214,42);
        $formu->Ln();
        $this->setResponse('view');
        $file = "public/temp/reportes/Empresa_".Session::getData('documento').".pdf";
        ob_clean();
        $formu->Output( $file,"F");       
        $formu = parent::successFunc("Genera Formulario",$file);
        return $formu;
    }



    public function cambioReprecentanteAction(){
        try{
            try{
                $this->setResponse("ajax");
                $cedres = $this->getPostParam("cedres");
                $nomrep = $this->getPostParam("nomrep");
                $path   = "public/files/";

                $archivo = $_FILES["archivo_camara"];        
                Debug::addVariable("a",$archivo);
                throw new DebugException(0);    
                $this->uploadFile("archivo_camara_".Session::getData('documento'),"/$path/");
                Debug::addVariable("a",$cedrep);
                Debug::addVariable("b",$nomrep);
                throw new DebugException(0);    
            }catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        }catch (TransactionFailed $e) {
            $response = parent::errorFunc("Mal");
            return $this->renderText(json_encode($response));
        }
    }


    public function retirarAction(){
        try{
            try{
                $this->setResponse("ajax");
                $modelos = array("mercurio35");
                $Transaccion = parent::startTrans($modelos);
                $response = parent::startFunc();
                $nit = Session::getData('documento');
                $cedtra = $this->getPostParam("cedtra","addslaches","alpha","extraspaces","striptags");
                $codest = $this->getPostParam("codest","addslaches","alpha","extraspaces","striptags");
                $fecret = $this->getPostParam("fecret","addslaches","extraspaces","striptags");
                $nota = $this->getPostParam("nota","addslaches","alpha","extraspaces","striptags");

                $codare = $this->getPostParam("codare");
                $codope = $this->getPostParam("codope");

                $mercurio07 = $this->Mercurio07->findBysql("SELECT * FROM mercurio07 where documento ='{$nit}'");

                $mresult = parent::webService("DatosTrabajador",array("nit"=>$nit,"cedtra"=> $cedtra));
                if($mresult==false){
                    $response = parent::errorFunc("El trabajador no esta afiliado a la empresa. verifique la cedula");
                    return $this->renderText(json_encode($response));
                }
                $mer35 = $this->Mercurio35->count("*","conditions: cedtra='$cedtra' and estado= 'P'");
                if($mer35 > 0){
                    $response = parent::errorFunc("El trabajador esta pendiente por aprobar la novedad de retiro");
                    return $this->renderText(json_encode($response));
                }
                $fecafi = date("Y-m-d",strtotime($mresult[0]['fecafi']));
                if(Date::compareDates($fecafi,$fecret)>0){ 
                    $response = parent::errorFunc("La Fecha de Retiro no puede ser menor a la fecha de afiliacion");
                    return $this->renderText(json_encode($response));
                }
                $mercurio35 = new Mercurio35();
                $mercurio35->setTransaction($Transaccion);
                $mercurio35->setNit($nit);
                $mercurio35->setCedtra($cedtra);
                $mercurio35->setCodest($codest);
                $mercurio35->setFecret($fecret);
                $mercurio35->setNota($nota);
                $mercurio35->setEstado("P");
                $mercurio35->setFecest(NULL);
                $mercurio35->setMotivo(NULL);
                $mercurio35->setUsuario(parent::asignarFuncionario($codare,$codope));
                if(!$mercurio35->save()){
                    parent::setLogger($mercurio35->getMessages());
                    parent::ErrorTrans();
                }

                $email  = $mercurio07->getEmail();
                $asunto = "Retiro de un trabajador";
                $msg    = " Gracias por utilizar el Servicio en L&iacute;nea de Comfamiliar Huila, usted acaba de realizar el proceso de Retiro del (los) siguiente(s) Trabajador(es):<br><br>
                            ".$mresult[0]['cedtra']." - ".$mresult[0]['nombre']." - ".$mresult[0]['salario']." - ".$mresult[0]['sexo']." - ".$mresult[0]['fecnac']." - ".$mresult[0]['direccion']." - ".$mresult[0]['telefono']." - ".$mresult[0]['fecafi']."<br/><br/>
                            Esta informaci&oacute;n ser&aacute; verificada y validada por uno de nuestros funcionarios, a su correo de contacto '$email' le comunicaremos si la novedad ha sido aplicada o si present&oacute; alg&uacute;n tipo de inconsistencia para que sea corregida.<br/><br/>
                            Comfamiliar, más felicidad!!
                        ";
                parent::enviarCorreo(Session::getDATA('nombre'),Session::getDATA('nombre'),$email,$asunto,$msg,"");
                parent::finishTrans();
                $response = parent::successFunc("BIEN",null);
                return $this->renderText(json_encode($response));
            } catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        } catch (TransactionFailed $e) {
            $response = parent::errorFunc("Mal");
            return $this->renderText(json_encode($response));
        }
    }

    public function novmue_viewAction(){
      $this->setResponse("ajax");
      echo parent::showTitle('Novedades de Retiro por Muerte');
      echo parent::showHelp('<p>Mediante esta opción se puede generar las novedades de retiro por muete. </p>');
      $codest = parent::webService("CodigoEstado",array());
         foreach($codest as $mcodest){
               $_codest[$mcodest['codest']] = $mcodest['detalle'];
      }
      $this->setParamToView("codest", $_codest);
    }

// cargue de certificados
    public function cargueCertificados_viewAction(){
        $fecha = new Date;
        $this->setResponse("ajax");
        echo parent::showTitle('Certificados Adjuntos');
        $codare = $this->getPostParam("codare");
        $codope = $this->getPostParam("codope");
        $param = array("cedtra"=>Session::getData('documento'));
        $response="<br>";
        $response .="<table class='resultado-sec' border=1>";
        $response .="<tr class='tr-result' cellspacing='10'>";
        $response .="<td>Beneficiario</td>";
        $response .="<td>Certificado</td>";
        $response .="<td>Archivo</td>";
        $response .="</tr>";
        $result = parent::webService("Nucfambeneficiarios", $param);      
        if($result!=false){
            foreach ($result as $mresult){
                $benef = $mresult['beneficiario'];
                $datben = parent::webService("Datosfamiliar",array("documento"=>$benef));      
                $fecna = date("Y-m-d",strtotime($datben[0]['fecnac']));
                $fecnac = new Date($fecna);
                $difer = $fecha->diffDate($fecnac);
                $difano = $difer/365;
                if($difano > 12 && $difano < 18){
                    $response .="<tr>";
                    $response .="<td>{$datben[0]['nombre']}</td>";
                    $response .="<td>CERTIFICADO DE ESCOLARIDAD</td>";
                    $response .="<td>".Tag::fileField("file_certificado_{$datben[0]['documento']}")."</td>";
                    $response .= "<td>".Tag::hiddenField("certficado_{$datben[0]['documento']}","value: 01")."</td>";
                    $response .="</tr>";
                }elseif($difano > 18 && $difano < 19){
                    $response .="<tr>";
                    $response .="<td>{$datben[0]['nombre']}</td>";
                    $response .="<td>CERTIFICADO DE UNIVERSIDAD</td>";
                    $response .="<td>".Tag::fileField("file_certificado_{$datben[0]['documento']}")."</td>";
                    $response .= "<td>".Tag::hiddenField("certficado_{$datben[0]['documento']}","value: 02")."</td>";
                    $response .="</tr>";
                }elseif($difano > 59){
                    $response .="<tr>";
                    $response .="<td>{$datben[0]['nombre']}</td>";
                    $response .="<td>CERTIFICADO DE SUPERVICENCIA</td>";
                    $response .="<td>".Tag::fileField("file_certificado_{$datben[0]['documento']}")."</td>";
                    $response .= "<td>".Tag::hiddenField("certficado_{$datben[0]['documento']}","value: 02")."</td>";
                    $response .="</tr>";
                }else{
                    $response .="<tr>";
                    $response .="<td>{$datben[0]['nombre']}</td>";
                    $response .="<td colspan=3>NO DEBE DE PRESENTAR CERTIFICADOS</td>";
                    $response .="</tr>";
                }
            }
        }else{
            $response .="<tr>";
            $response .="<td colspan=4>NO TIENE BENEFICIARIOS</td>";
            $response .="</tr>";
        }
            $response .="<tr>";
            $response .="<td><br></td>";
            $response .="</tr>";
            $response .="<tr>";
            $response .="<td colspan=5 align='center'>".Tag::Button("Presentar los certificados",'class: submit','style: width: 300px; ',"onclick: Guardar();")."</td>";
            $response .="</tr>";
        $response .="</table>";
        $this->setParamToView("html", $response);
        $this->setParamToView("codare", $codare);
        $this->setParamToView("codope", $codope);
    }

    public function cargueCertificadosAction(){
        try{
            try{
                $response = parent::startFunc();
                $modelos = array("mercurio45","mercurio21");
                $Transaccion = parent::startTrans($modelos);
                Session::setData('nota_audit',"Envio Certificado");
                $log_id = parent::registroOpcion();
                if($log_id==false)parent::ErrorTrans();
                $codare = $this->getPostParam("codare");
                $codope = $this->getPostParam("codope");
                $ruta_file = "";
                $param = array("cedtra"=>Session::getData('documento'));
                $result = parent::webService("Nucfambeneficiarios", $param);      
                $a=0;
                if($result!=false){
                    foreach ($result as $mresult){
                        $benef = $mresult['beneficiario'];
                        $datben = parent::webService("Datosfamiliar",array("documento"=>$benef));      
                        if(!isset($_FILES["file_certificado_{$datben[0]['documento']}"])){
                            continue;
                        }
                        $mercurio45 = new Mercurio45();
                        $mercurio45->setTransaction($Transaccion);
                        $mercurio45->setId(0);
                        $mercurio45->setCodcaj(Session::getDATA('codcaj'));
                        $mercurio45->setDocumento(Session::getDATA('documento'));
                        $mercurio45->setCodben($datben[0]['documento']);
                        $mercurio45->setCodcer($this->getPostParam("certficado_{$datben[0]['documento']}"));
                        $mercurio45->setEstado("P");
                        $mercurio45->setLog($log_id);
                        $mercurio45->setUsuario(parent::asignarFuncionario($codare,$codope));
                        if(isset($_FILES["file_certificado_{$datben[0]['documento']}"])){
                            if($_FILES["file_certificado_{$datben[0]['documento']}"]['name'] != false){
                                $a=1;
                            }
                            $_FILES["file_certificado_{$datben[0]['documento']}"]['name'] = $mercurio45->getLog()."_precer_".substr($_FILES["file_certificado_{$datben[0]['documento']}"]['name'],-4);
                            $path = "public/files/";
                            $this->uploadFile("file_certificado_{$datben[0]['documento']}",getcwd()."/$path/");
                            $dd=pathinfo($_FILES["file_certificado_{$datben[0]['documento']}"]["name"]);
                            $archivo_nombre = $path.$dd['basename'];
                            $ruta_file[] = $archivo_nombre;
                            $mercurio45->setNomarc($archivo_nombre);
                        }
                        if(!$mercurio45->save()){
                            parent::setLogger($mercurio45->getMessages());
                            parent::ErrorTrans();
                        }
                    }
                }else{
                    return $this->redirect("principal/index/No ingreso ningun Archivo");
                }
                if($a >0){
                    $asunto = "Nuevo Envio de Certificados  ".Session::getDATA("documento")." - ".Session::getDATA('nombre');
                    $msg = "Cordial Saludos<br><br>Esta pendiente por registrar los certificados<br><br>";
                    $msg .="<br><br>Atentamente,<br><br>MERCURIO";
                    parent::enviarCorreo("Ingreso Certificado",  Session::getData("documento"), "", $asunto, $msg, $ruta_file);
                    parent::finishTrans();
                    return $this->redirect("principal/index/Ingreso de Certificado Exito, Pendiente por Aprobar");
                }else{
                    return $this->redirect("principal/index/No ingreso ningun Archivo");
                }
            } catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        } catch (TransactionFailed $e) {
            return $this->redirect("principal/index/Error al Ingresar Certificado");
        }
    }




 
    public function novmueAction(){
               
      $this->setResponse("ajax");
          $response = "";
          $response .="<table class='resultado-sec' border='1'>";
          $response .="<tr class='tr-result' cellspacing='10'>";
          $response .="<td>Cedula</td>";
          $response .="<td>Nombre</td>";
          $response .="<td>Salario</td>";
          $response .="<td>Sexo</td>";
          $response .="<td>Fecha Nacimiento</td>";
          $response .="<td>Direccion</td>";
          $response .="<td>Telefono</td>";
          $response .="<td>Fecha Afiliacion</td>";
          $response .="</tr>";
          $cedtra = $this->getPostParam("cedtra","addslaches","extraspaces","striptags");
          $result = parent::webService("DatosTrabajador",array("cedtra"=> $cedtra));
          if($result!=false){
            foreach($result as $mresult){
              $response .="<tr>";
              $response .="<td>{$mresult['cedtra']}</td>";
              $response .="<td>{$mresult['nombre']}</td>";
              $response .="<td>{$mresult['salario']}</td>";
              $response .="<td>{$mresult['sexo']}</td>";
              $response .="<td>{$mresult['fecnac']}</td>";
              $response .="<td>{$mresult['direccion']}</td>";
              $response .="<td>{$mresult['telefono']}</td>";
              $response .="<td>{$mresult['fecafi']}</td>";
              $response .="</tr>";
            }
          }
          $response .="</table>";
           return $this->renderText(json_encode($response));  
   
    }

    public function muerteAction(){
        try{
            try{

                $this->setResponse("ajax");
                $modelos = array("mercurio36");
                $Transaccion = parent::startTrans($modelos);
                $response = parent::startFunc();
                $cedtra = $this->getPostParam("cedtra","addslaches","alpha","extraspaces","striptags");
                $codest = $this->getPostParam("codest","addslaches","alpha","extraspaces","striptags");
                $fecret = $this->getPostParam("fecret","addslaches","alpha","extraspaces","striptags");
                $nota = $this->getPostParam("nota","addslaches","alpha","extraspaces","striptags");
                $mercurio36 = new Mercurio36();
                $mercurio36->setTransaction($Transaccion);
                $mercurio36->setCedtra($cedtra);
                $mercurio36->setCodest($codest);
                $mercurio36->setFecret($fecret);
                $mercurio36->setNota($nota);
                $mercurio36->setEstado("P");
                $mercurio36->setFecest(NULL);
                $mercurio36->setMotivo(NULL);
                if(!$mercurio36->save()){
                    parent::setLogger($mercurio36->getMessages());
                    parent::ErrorTrans();
                }
                parent::finishTrans();
                $response = parent::successFunc("BIEN",null);

                return $this->renderText(json_encode($response));
            } catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        } catch (TransactionFailed $e) {
            $response = parent::errorFunc("Mal");
            return $this->renderText(json_encode($response));
        }
    }



    public function convenios_viewAction(){
      $this->setResponse("ajax");
      echo parent::showTitle('Consulta Convenios');
      echo parent::showHelp('<p>Mediante esta herramiente se puede visualizar los convenios a los cuales tiene la empresa, mostrando el tipo <strong>C es convenio e I es interrupcion</strong> ,ademas demuestra el periodo inicial, el preiodo final, la fecha de ingreso y el valor del convenio. </p>  ');  
 
      $param = array("nit"=>Session::getDATA('documento'));
      $response = "";
      $response .="<br>";
      $response .="<div class='resultado-prin'>";
      $response .="<table class='resultado-sec' border=1>";
      $response .="<tr class='tr-result' cellspacing='10'>";
      $response .="<td>Tipo</td>";
      $response .="<td>Periodo Inicial</td>";
      $response .="<td>Periodo Final</td>";
      $response .="<td>Fecha de Ingreso</td>";
      $response .="<td>Valor de Convenio </td>";
      $response .="</tr>";
      $response .="<tr>";
      $result = parent::webService("ConsultaConvenio",$param );
      if($result!=false){
        foreach($result as $mresult){
          $response .="<tr>";
          if($mresult['tipo']=='I'){
              $tipo="INTERRUPCI&Oacute;N";
          }else{
              $tipo="CONVENIO";
          }  
          $response .="<td>{$tipo}</td>";
          $response .="<td>{$mresult['perini']}</td>";
          $response .="<td>{$mresult['perfin']}</td>";
          $response .="<td>{$mresult['fecing']}</td>";
          $response .="<td>{$mresult['valdoc']}</td>";
          $response .="</tr>";
        }
      }
      $response .="</tr>";
      echo $response;
    
    }

    public function precer_viewAction(){
      $this->setResponse("ajax");
      echo parent::showTitle('Presentacion de Certificados');   
    }

    public function actdatobl_viewAction(){
      $this->setTemplateAfter('escritorio');
      echo parent::showTitle('Actualización Datos Básicos');
      $mercurio28  = $this->Mercurio28->find("tipo = '".Session::getDATA('tipo')."'");
      foreach($mercurio28 as $mmercurio28){
        $campos[$mmercurio28->getCampo()] = $mmercurio28->getDetalle();
      }
      $script = "";
      $script .= "<script type='text/javascript'>";
      $script .= "var val = new Validator();";
      $script .= "Event.observe(document, 'dom:loaded', function(){";
      foreach($campos as $key => $value){
        $script .= "val.addField('$key','text',null,{'alias': '$value','isNull': false});";
      }
      $script .= "});";
      
      $script .= "
      Guardar = function(){
        if(!val.valide()){
          Messages.valide(val);
          return;
        }
        ajaxRemoteForm($('form'), 'content',{
          success: function(transport){
            var response = transport.responseText.evalJSON();
            if(response['flag']==true){
              Messages.display(Array(response['msg']),'success');
              window.location = Utils.getKumbiaURL('principal');
            }else{
              Messages.display(Array(response['msg']),'warning');
            }";
            $script .= "}
        });
      }";
    
      $script .= "</script>";
      if(Session::getDATA('tipo')=="T")$titulo = "Datos del Trabajador";
      if(Session::getDATA('tipo')=="E")$titulo = "Datos de la Empresa";
      if(Session::getDATA('tipo')=="C")$titulo = "Datos del Conyuge";
      $result = parent::webService('Infobasica',array("tipo"=>Session::getDATA('tipo'),"cedtra"=>SESSION::getDATA('documento')));
      $html  = "";
      $html .= "<tr>";
      $html .="<td colspan=6>$titulo</td>";
      $html .= "</tr>";
      foreach($campos as $key => $value){
        $html .= "<tr>";
        $html .= "<td><label>{$value}</label></td>";
        $value = "value: ";
        if($result!=false){
            $value = "value: {$result[0][$key]}";
        }
        $html .= "<td>".Tag::textField($key,$value)."</td>";
        $html .= "</tr>";
      }
      $html .= "";
      $this->setParamToView("script", $script);
      $this->setParamToView("html", $html);
      
    }
    
    public function actdatoblAction(){
      try{
        try{
          $this->setResponse("ajax");
          $response = parent::startFunc();
          $modelos = array("mercurio33","mercurio21");
          $Transaccion = parent::startTrans($modelos);
          Session::setData('nota_audit',"Actualizacion de Datos Prueba");
          $log_id = parent::registroOpcion();
          if($log_id==false)parent::ErrorTrans();
          $result = parent::webService('Infobasica',array("tipo"=>Session::getDATA('tipo'),"cedtra"=>SESSION::getDATA('documento')));
          $mercurio28 = $this->Mercurio28->find("tipo = '".Session::getDATA('tipo')."'");
          foreach($mercurio28 as $mmercurio28){
            $valor = $this->getPostParam("{$mmercurio28->getCampo()}","addslaches","extraspaces","striptags");
            if($result!=false){
                if($result[0][$mmercurio28->getCampo()]==$valor)continue;
            }
            $mercurio33 = new Mercurio33();
            $mercurio33->setTransaction($Transaccion);
            $mercurio33->setId(0);
            $mercurio33->setCodcaj(Session::getDATA('codcaj'));
            $mercurio33->setTipo(Session::getDATA('tipo'));
            $mercurio33->setDocumento(Session::getDATA('documento'));
            $mercurio33->setCampo($mmercurio28->getCampo());
            $mercurio33->setValor($valor);
            $mercurio33->setEstado("P");
            $mercurio33->setLog($log_id);

            if(!$mercurio33->save()){
              parent::setLogger($mercurio33->getMessages());
              parent::ErrorTrans();
            }
          }
          $asunto = "Nueva Actualización de Datos ".Session::getDATA("documento")." - ".Session::getDATA('nombre');
          $msg = "Cordial Saludos<br><br>Esta pendiente por actualizar los datos<br><br>";
          foreach($mercurio28 as $mmercurio28){
            $msg .="<b>{$mmercurio28->getDetalle()}:</b> ".$this->getPostParam("{$mmercurio28->getCampo()}","addslaches","extraspaces","striptags")."<br>";
          }
          $msg .="<br><br>Atentamente,<br><br>MERCURIO";
          $ruta_file = "";
          parent::enviarCorreo("Actualización datos Trabajador Mercurio",  Session::getData("documento"), "", $asunto, $msg, $ruta_file);
          parent::finishTrans();
          $response = parent::successFunc("Actualización exitosa",null);
          return $this->renderText(json_encode($response));
        } catch (DbException $e) {
          parent::setLogger($e->getMessage());
          parent::ErrorTrans();
        }
      } catch (TransactionFailed $e) {
        $response = parent::errorFunc("Error al Actualizar Datos");
        return $this->renderText(json_encode($response));
      }
    }

    public function traerCiudadAction(){
        $this->setResponse("ajax");
        $coddep = $this->getPostParam("coddep");
        $codciu = parent::webService("CiudadesFiltradas",array("coddep"=>$coddep));
        
        if($codciu != false){
            $response = "<option value='@'>Seleccione...</option>";
            foreach($codciu as $ciudad)
                $response .= "<option value='$ciudad[codciu]'>$ciudad[detalle]</option>";
        }else{
            $response = false;
        }
        $this->renderText(json_encode($response));
    }    

   
    public function actdatAction(){
        try{
            try{
                $this->setResponse("ajax");
                $response = parent::startFunc();
                $modelos = array("mercurio33","mercurio21");
                $Transaccion = parent::startTrans($modelos);
                Session::setData('nota_audit',"Actualización de Datos Prueba");
                $log_id = parent::registroOpcion();
                if($log_id==false)parent::ErrorTrans();
                $result = parent::webService('Infobasica',array("tipo"=>Session::getDATA('tipo'),"documento"=>SESSION::getDATA('documento')));
                $result[0]['fax'] = "";
                $mercurio28 = $this->Mercurio28->find("tipo = '".Session::getDATA('tipo')."'");
                $depart = $this->getPostParam("depart","addslaches","alpha","extraspaces","striptags");
                $codciu = $this->getPostParam("codciu","addslaches","alpha","extraspaces","striptags");
                if(Session::getDATA('tipo') == 'E' ){
                    $deppri = $this->getPostParam("deppri","addslaches","alpha","extraspaces","striptags");
                    $codpri = $this->getPostParam("codpri","addslaches","alpha","extraspaces","striptags");
                }
                foreach($mercurio28 as $mmercurio28){
                    $valor = $this->getPostParam("{$mmercurio28->getCampo()}","addslaches","extraspaces","striptags");
                    if($result!=false){
                        if($result[0][$mmercurio28->getCampo()]==$valor)continue;
                    }
                    $mercurio33 = new Mercurio33();
                    $mercurio33->setTransaction($Transaccion);
                    $mercurio33->setId(0);
                    $mercurio33->setCodcaj(Session::getDATA('codcaj'));
                    $mercurio33->setTipo(Session::getDATA('tipo'));
                    $mercurio33->setDocumento(Session::getDATA('documento'));
                    $mercurio33->setCampo($mmercurio28->getCampo());
                    $mercurio33->setValor($valor);
                    $mercurio33->setEstado("P");
                    $mercurio33->setLog($log_id);
                    if(!$mercurio33->save()){
                        parent::setLogger($mercurio33->getMessages());
                        parent::ErrorTrans();
                    }
                }
                $documento = Session::getData('documento');
                $mercurio07 = $this->Mercurio07->findBysql("SELECT * FROM mercurio07 where documento='{$documento}'");
                $email = $mercurio07->getEmail();
                $asunto = "Nueva Actualización de Datos ".Session::getDATA("documento")." - ".Session::getDATA('nombre');
                $msg = "Gracias por utilizar el Servicio en L&iacute;nea de Comfamiliar Huila, usted acaba de realizar el proceso de Actualizaci&oacute;n de Datos B&aacute;sicos, asi:<br><br>";
                foreach($mercurio28 as $mmercurio28){
                    $msg .="<b>{$mmercurio28->getDetalle()}:</b> ".$this->getPostParam("{$mmercurio28->getCampo()}","addslaches","extraspaces","striptags")."<br>";
                }
                $msg .="<br><br>Estos cambios sernacute; aplicados en las poximas 24 horas en nuestra plataforma de Aportes y Subsidio,<br><br> Comfamiliar, más felicidad!! ";
                $ruta_file = "";
                parent::enviarCorreo("Actualizacion datos Trabajador Mercurio",  Session::getData("documento"),$email, $asunto, $msg, $ruta_file);
                parent::finishTrans();
                $response = parent::successFunc("Actualización exitosa",null);
                return $this->renderText(json_encode($response));
            } catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        } catch (TransactionFailed $e) {
            $response = parent::errorFunc("Error al Actualizar Datos");
            return $this->renderText(json_encode($response));
        }
    }

    public function comprobarDocumentoAction(){
        $this->setResponse('ajax');
        $documento = $this->getPostParam("documento");
        $flag = parent::webService("Autenticar",array('tipo' => 'B', 'documento' => $documento));
        $response = true;
        if($flag != false){
            $response = false;
        }
        $this->renderText(json_encode($response));
    }

    public function ingben_viewAction(){
        $this->setResponse("ajax");
        $codare = $this->getPostParam('codare');
        $codope = $this->getPostParam('codope');
        $param = array("cedtra"=>Session::getData('documento'));
        echo parent::showTitle('Ingreso Beneficiarios');
        Tag::displayTo("cedtra", Session::getData("documento"));
        Tag::displayTo("nombre", Session::getData("nombre"));
        $coddoc = parent::webService('Tiposdocumentos',array());
        foreach($coddoc as $mcoddoc){
            $_coddoc[$mcoddoc['coddoc']] = $mcoddoc['detalle'];
        }
        $result = parent::webService("Nucfamconyuge", $param);
        $idcony = $result[0]['conyuge'];
        if($idcony != false){
            $result = parent::webService("DatosConyuje",array("documento"=>$idcony));
            if($result != FALSE){
                foreach ($result as $mresult) {
                    $_conyuge[$mresult['documento']] = $mresult['documento']."-".$mresult['nombre'];
                }
            }else{
                $_conyuge = array(""=>"");
            }
        }else{
            $_conyuge = array(""=>"");
        }

        $nivedu = parent::webService('nivedu',array());
        if($nivedu != false){
            foreach($nivedu as $mnivedu){
                $_nivedu[$mnivedu['coddoc']] = $mnivedu['detalle'];
            }
        }
        $calendario = array('A' => 'A', 'B' => 'B', 'N' => 'NO APLICA');
        $huerfano = array('0' => 'No aplica','1' => 'Huerfano de Padre', '2' => 'Huerfano de Madre');
        $tiphij = array('0' => 'No aplica','1' => 'Hijo', '2' => 'Hijastro');
        /*
           $captra = parent::webService('Captra',array());
           foreach($captra as $mcaptra){
           $_captra[$mcaptra['captra']] = $mcaptra['detalle'];
           }    
           $tipdis = parent::webService('Tipdis',array());
           foreach($tipdis as $mtipdis){
           $_tipdis[$mtipdis['tipdis']] = $mtipdis['detalle'];
           }
         */ 
        $depart = parent::webService('departamento',array());
        foreach($depart as $mdepart ){
            $_depart[$mdepart['coddep']] = $mdepart['detalle'];
        }
        $codciu = parent::webService('ciudades',array());
        foreach($codciu as $mcodciu){
            $_ciunac[$mcodciu['codciu']] = $mcodciu['detalle'];
        }
        $this->setParamToView("calendario",$calendario);
        $this->setParamToView("codciu",$_ciunac);
        $this->setParamToView("tiphij",$tiphij);
        $this->setParamToView("huerfano",$huerfano);
        $this->setParamToView("nivedu", $_nivedu);
        $this->setParamToView("coddoc", $_coddoc);
        $this->setParamToView("codare", $codare);
        $this->setParamToView("codope", $codope);
        $this->setParamToView("coddep", $_depart);
        $this->setParamToView("conyuge", $_conyuge);
        //$this->setParamToView("tipdis",$_tipdis);
        //$this->setParamToView("captra",$_captra);
    }

    public function ingbenAction(){
        try{
            try{
                $modelos = array("mercurio34","mercurio21","mercurio40");
                $Transaccion = parent::startTrans($modelos);
                $cedtra = $this->getPostParam("cedtra","addslaches","alpha","extraspaces","striptags");
                $nombre = $this->getPostParam("nombre","addslaches","alpha","extraspaces","striptags");
                $cedcon = $this->getPostParam("cedcon","addslaches","alpha","extraspaces","striptags");
                $documento = $this->getPostParam("documento","addslaches","alpha","extraspaces","striptags");
                $coddoc = $this->getPostParam("coddoc","addslaches","alpha","extraspaces","striptags");
                $priape = $this->getPostParam("priape","addslaches","alpha","extraspaces","striptags");
                $segape = $this->getPostParam("segape","addslaches","alpha","extraspaces","striptags");
                $prinom = $this->getPostParam("prinom","addslaches","alpha","extraspaces","striptags");
                $segnom = $this->getPostParam("segnom","addslaches","alpha","extraspaces","striptags");
                $sexo = $this->getPostParam("sexo","addslaches","alpha","extraspaces","striptags");
                $fecnac = $this->getPostParam("fecnac","addslaches","extraspaces","striptags");
                $parent = $this->getPostParam("parent","addslaches","alpha","extraspaces","striptags");
                $estudio = $this->getPostParam("estudio","addslaches","alpha","extraspaces","striptags");
                $captra = $this->getPostParam("captra","addslaches","alpha","extraspaces","striptags");
                $huerfano = $this->getPostParam("huerfano","addslaches","alpha","extraspaces","striptags");
                $tiphij = $this->getPostParam("tiphij","addslaches","alpha","extraspaces","striptags");
                $tipdis = $this->getPostParam("tipdis","addslaches","alpha","extraspaces","striptags");
                $nivedu = $this->getPostParam("nivedu","addslaches","alpha","extraspaces","striptags");
                $ciunac = $this->getPostParam("ciunac","addslaches","alpha","extraspaces","striptags");
                $calendario = $this->getPostParam ("calendario","addslaches","alpha","extraspaces","striptags");
                $codare = $this->getPostParam("codare");
                $codope = $this->getPostParam("codope");
                Session::setData('nota_audit',"Ingreso de Beneficiario");
                $log_id = parent::registroOpcion();
                if($log_id==false)parent::ErrorTrans();
                $mercurio34 = new Mercurio34();
                $mercurio34->setTransaction($Transaccion);
                $mercurio34->setId(0);
                $mercurio34->setLog($log_id);
                $mercurio34->setCodcaj(Session::getDATA('codcaj'));
                $mercurio34->setCedtra($cedtra);
                $mercurio34->setCedcon($cedcon);
                $mercurio34->setDocumento($documento);
                $mercurio34->setCoddoc($coddoc);
                $mercurio34->setPriape($priape);
                $mercurio34->setSegape($segape);
                $mercurio34->setPrinom($prinom);
                $mercurio34->setSegnom($segnom);
                $mercurio34->setSexo($sexo);
                $mercurio34->setFecnac($fecnac);
                $mercurio34->setParent($parent);
                $mercurio34->setEstudio($estudio);
                $mercurio34->setEstado("P");
                $mercurio34->setCaptra($captra);
                $mercurio34->setHuerfano($huerfano);
                $mercurio34->setTiphij($tiphij);
                $mercurio34->setTipdis($tipdis);
                $mercurio34->setNivedu($nivedu);
                $mercurio34->setCiunac($ciunac);
                $mercurio34->setCalendario($calendario);
                $mercurio34->setUsuario(parent::asignarFuncionario($codare,$codope));
                if(!$mercurio34->save()){
                    parent::setLogger($mercurio34->getMessages());
                    parent::ErrorTrans();
                }
                $mercurio07 = $this->Mercurio07->findFirst("documento = $cedtra");
                $emailTra = $mercurio07->getEmail();
                $nomben = $priape." ".$segape." ".$prinom." ".$segnom;
                $asunto = "Ingreso de Beneficiario del Trabajador $cedtra";
                $msg = "Cordial Saludos<br><br>Esta pendiente por afiliar al Beneficiario $documento - $nomben<br><br>Atentamente,<br><br>COMFAGUAJIRA";
                $ruta_file = "";

          $mercurio13 = $this->Mercurio13->find("codcaj = '".Session::getDATA('codcaj')."' AND codare = '$codare' AND codope = '$codope'");
          foreach($mercurio13 as $mmercurio13){
              if(isset($_FILES['archivo_'.$mmercurio13->getCoddoc()])){
                  $_FILES["archivo_{$mmercurio13->getCoddoc()}"]['name'] = $mercurio34->getId()."_".$mmercurio13->getCoddoc()."_".$documento.substr($_FILES["archivo_{$mmercurio13->getCoddoc()}"]['name'],-4);
                  $path = "public/files/";
                  $this->uploadFile("archivo_{$mmercurio13->getCoddoc()}",getcwd()."/$path/");
                  $dd = pathinfo($_FILES["archivo_{$mmercurio13->getCoddoc()}"]["name"]);
                  $archivo_nombre = $path.$dd['basename'];
                  $ruta_file[] = $archivo_nombre;
                  $mercurio40 = new Mercurio40();
                  $mercurio40->setTransaction($Transaccion);
                  $mercurio40->setNumero($mercurio34->getId());
                  $mercurio40->setCoddoc($mmercurio13->getCoddoc());
                  $mercurio40->setNomarc($archivo_nombre);
                  if(!$mercurio40->save()){
                    parent::setLogger($mercurio40->getMessages());
                    parent::ErrorTrans();
                  }
              }
          }
          $flag_email = parent::enviarCorreo("Afiliación de Beneficiario",$nomben,"mercurio@syseu.com",$asunto,$msg,$ruta_file);
          if($flag_email==false){
              return $this->redirect("principal/index/Se envio el Formulario pero sin correo electrónico");
          } 
         
          $asuntoben = "Solicitud de Ingreso de Beneficiario $nomben";
          $msgben ="";
          $msgben .= "<p>Apreciado(a) ".Session::getDATA('nombre')."</p><br/><br/>";
          $msgben .= "<p>La solicitud de afiliacion del beneficiario identificado con documento No.$documento y de nombre $nomben se encuentra en estado pendiente por aprobacion. En breve estaremos informandole acerca del estado de su solicitud.</p><br/><br/><br/>";
          $msgben .= "<p>Atentamente,</p><br/><br/><br/>";
          $msgben .= "<p>Mercurio";
          $flag_email = parent::enviarCorreo("Afiliación de Beneficiario",$nombre, $emailTra, $asuntoben, $msgben, "");
          if($flag_email==false){
              return $this->redirect("principal/index/Se envio el formulario pero sin correo electrónico");
          }
          parent::finishTrans();
          return $this->redirect("principal/index/Se Registro Exitosamente");
        } catch (DbException $e) {
          parent::setLogger($e->getMessage());
          parent::ErrorTrans();
        }
      } catch (TransactionFailed $e) {
        return $this->redirect("principal/index/No se pudo registrar");
      }
    }

    public function comprobarCedconAction(){
        $this->setResponse('ajax');
        $cedcon = $this->getPostParam("cedcon");
        $flag = parent::webService("Autenticar",array('tipo' => 'C', 'documento' => $cedcon));
        $response = true;
        if($flag != false){
            $response = false;
        }
        $this->renderText(json_encode($response));
    }
    
    public function ingcon_viewAction(){
        $this->setResponse("ajax");
        $codare = $this->getPostParam('codare');
        $codope = $this->getPostParam('codope');
        echo parent::showTitle('Ingreso Conyuge');
        Tag::displayTo("cedtra", Session::getData("documento"));
        Tag::displayTo("nombre", Session::getData("nombre"));
        $coddoc = parent::webService('Tiposdocumentos',array());
        foreach($coddoc as $mcoddoc){
            $_coddoc[$mcoddoc['coddoc']] = $mcoddoc['detalle'];
        }
        $codciu = parent::webService('Ciudades',array());
        foreach($codciu as $mcodciu){
            $_codciu[$mcodciu['codciu']] = $mcodciu['detalle'];
        }
        $estciv = parent::webService('estadosciviles',array());
        foreach($estciv as $mestciv){
            $_estciv[$mestciv['coddoc']] = $mestciv['detalle'];
        }
        //$ocupacion = parent::webService('codocuMercurio32',array());
        //foreach($oCupacion as $mocupacion){
            //$_ocupacion[$mocupacion['codocu']] = $mocupacion['detalle'];
        //}

        $nivedu = parent::webService('nivedu',array());
        foreach($nivedu as $mnivedu){
            $_nivedu[$mnivedu['coddoc']] = $mnivedu['detalle'];
        }
        //$cajcon = parent::webService('cajas',array());
        //foreach($cajcon as $mcajcon){
           // $_cajcon[$mcajcon['codcaj']] = $mcajcon['detalle'];
        //}
        $depart = parent::webService('Departamento',array());
        foreach($depart as $mdepart ){
            $_depart[$mdepart['coddep']] = $mdepart['detalle'];
        }
        $this->setParamToView("coddoc", $_coddoc);
        $this->setParamToView("codciu", $_codciu);
        $this->setParamToView("estciv", $_estciv);
        //$this->setParamToView("codocu", $_ocupacion);
        $this->setParamToView("nivedu", $_nivedu);
        //$this->setParamToView("cajcon", $_cajcon);
        $this->setParamToView("codare", $codare);
        $this->setParamToView("codope", $codope);
        $this->setParamToView("coddep", $_depart);
    }

    public function ingconAction(){
        try{
            try{
                $this->setResponse("ajax");
                $today = new Date();
                $response = parent::startFunc();
                $modelos = array("mercurio32","mercurio21","mercurio39");
                $Transaccion = parent::startTrans($modelos);
                $codcaj = Session::getData('codcaj');
                $cajcon = $this->getPostParam("cajcon","addslaches","alpha","extraspaces","striptags");
                $cedtra = $this->getPostParam("cedtra","addslaches","alpha","extraspaces","striptags");
                $nombre = $this->getPostParam("nombre","addslaches","alpha","extraspaces","striptags");
                $cedcon = $this->getPostParam("cedcon","addslaches","alpha","extraspaces","striptags");
                $coddoc = $this->getPostParam("coddoc","addslaches","alpha","extraspaces","striptags");
                $priape = $this->getPostParam("priape","addslaches","alpha","extraspaces","striptags");
                $segape = $this->getPostParam("segape","addslaches","alpha","extraspaces","striptags");
                $prinom = $this->getPostParam("prinom","addslaches","alpha","extraspaces","striptags");
                $segnom = $this->getPostParam("segnom","addslaches","alpha","extraspaces","striptags");
                $fecnac = $this->getPostParam("fecnac","addslaches","extraspaces","striptags");
                $direccion = $this->getPostParam("direccion","addslaches","alpha","extraspaces","striptags");
                $telefono = $this->getPostParam("telefono","addslaches","alpha","extraspaces","striptags");
                $email = $this->getPostParam("email","addslaches","extraspaces","striptags");
                $salario = $this->getPostParam("salario","addslaches","alpha","extraspaces","striptags");
                $sexo = $this->getPostParam("sexo","addslaches","alpha","extraspaces","striptags");
                $estciv = $this->getPostParam("estciv","addslaches","alpha","extraspaces","striptags");
                $ciunac = $this->getPostParam("ciunac","addslaches","alpha","extraspaces","striptags");
                $codocu = $this->getPostParam("codocu","addslaches","alpha","extraspaces","striptags");
                $nivedu = $this->getPostParam("nivedu","addslaches","alpha","extraspaces","striptags");
                $captra = $this->getPostParam("captra","addslaches","alpha","extraspaces","striptags");
                $codare = $this->getPostParam("codare");
                $codope = $this->getPostParam("codope");
                Session::setData('nota_audit',"Ingreso de Conyuge");
                $log_id = parent::registroOpcion();
                if($log_id==false)parent::ErrorTrans();
                $mercurio32 = new Mercurio32();
                $mercurio32->setTransaction($Transaccion);
                $mercurio32->setId(0);
                $mercurio32->setLog($log_id);
                $mercurio32->setCodcaj($codcaj);
                $mercurio32->setCajcon($cajcon);
                $mercurio32->setCedtra($cedtra);
                $mercurio32->setCedcon($cedcon);
                $mercurio32->setCoddoc($coddoc);
                $mercurio32->setPriape($priape);
                $mercurio32->setSegape($segape);
                $mercurio32->setPrinom($prinom);
                $mercurio32->setSegnom($segnom);
                $mercurio32->setFecnac($fecnac);
                $mercurio32->setDireccion($direccion);
                $mercurio32->setTelefono($telefono);
                $mercurio32->setEmail($email);
                $mercurio32->setSalario($salario);
                $mercurio32->setSexo($sexo);
                $mercurio32->setEstciv($estciv);
                $mercurio32->setCiunac($ciunac);
                $mercurio32->setCodocu($codocu);
                $mercurio32->setNivedu($nivedu);
                $mercurio32->setCaptra($captra);
                $mercurio32->setFecing($today->getUsingFormatDefault());
                $mercurio32->setEstado("P");
                $mercurio32->setUsuario(parent::asignarFuncionario($codare,$codope));
                if(!$mercurio32->save()){
                Debug::addVariable("a",$mercurio32->getMessages());
                throw new DebugException(0);    


                    parent::setLogger($mercurio32->getMessages());
                    parent::ErrorTrans("Error del controller");
                }
                $mercurio07 = $this->Mercurio07->findFirst("documento = $cedtra");
                $emailTra = $mercurio07->getEmail();
                $nomcon = $priape." ".$segape." ".$prinom." ".$segnom;
                $asunto = "Nuevo Ingreso de Conyuge del Trabajador $cedtra - $nombre";
                $msg = "Cordial Saludos<br><br>Esta pendiente por afiliar al Conyuge $cedcon - $nomcon<br><br>Atentamente,<br><br>MERCURIO";
                $ruta_file = "";
                $mercurio13 = $this->Mercurio13->find("codcaj = '".Session::getDATA('codcaj')."' AND codare = '$codare' AND codope = '$codope'");
                foreach($mercurio13 as $mmercurio13){
                    if(isset($_FILES['archivo_'.$mmercurio13->getCoddoc()])){
                        $_FILES["archivo_{$mmercurio13->getCoddoc()}"]['name'] = $mercurio32->getId()."_".$mmercurio13->getCoddoc()."_".$cedcon.substr($_FILES["archivo_{$mmercurio13->getCoddoc()}"]['name'],-4);
                        $path = "public/files/";
                        $this->uploadFile("archivo_{$mmercurio13->getCoddoc()}",getcwd()."/$path/");
                        $dd = pathinfo($_FILES["archivo_{$mmercurio13->getCoddoc()}"]["name"]);
                        $archivo_nombre = $path.$dd['basename'];
                        $ruta_file[] = $archivo_nombre;
                        $mercurio39 = new Mercurio39();
                        $mercurio39->setTransaction($Transaccion);
                        $mercurio39->setNumero($mercurio32->getId());
                        $mercurio39->setCoddoc($mmercurio13->getCoddoc());
                        $mercurio39->setNomarc($archivo_nombre);
                        if(!$mercurio39->save()){
                            parent::setLogger($mercurio39->getMessages());
                            parent::ErrorTrans();
                        }
                    }
                }
                $flag_email = parent::enviarCorreo("Afiliación de Conyuge",$nomcon,"mercurio@syseu.com",$asunto, $msg, $ruta_file);
                $asuntocon = "Solicitud de Ingreso de Conyuge $nomcon";
                $msgcon ="";
                $msgcon .= "<p>Apreciado(a) ".Session::getDATA('nombre')."</p><br/><br/>";
                $msgcon .= "<p>La solicitud de afiliacion del conyuge identificado con documento No.$cedcon y de nombre $nomcon se encuentra en estado pendiente por aprobacion. En breve estaremos informandole acerca del estado de su solicitud.</p><br/><br/><br/>";
                $msgcon .= "<p>Atentamente,</p><br/><br/><br/>";
                $msgcon .= "<p>Mercurio";
                $flag_email = parent::enviarCorreo("Afiliación de Conyuge",$nombre, $emailTra, $asuntocon, $msgcon, "");
                if($flag_email==false){
                    return $this->redirect("principal/index/Se envio el Formulario pero sin correo electrónico");
                }
                parent::finishTrans();
                return $this->redirect("principal/index/Se registro Exitosamente");
            } catch (DbException $e) {
                parent::setLogger($e->getMessage());
                parent::ErrorTrans();
            }
        } catch (TransactionFailed $e) {
            return $this->redirect("principal/index/No se pudo registrar");
        }
    }



    public function planilla_viewAction(){
      parent::showTitle('Consulta de Planilla Unica');     
      echo parent::showHelp('<p>Mediante esta herramienta se puede visualizar el contenido de la planilla unica mostranndo en su contenido el numero del radicado, el periodo, el valor de la n&oacute;mina, el valor del interes, los trabajadores, la fecha n la que se realizo el pago.</p>');
      $response = "";
      $response .="<br>";
      $response .="<div class='resultado-prin'>";
      $response .="<table class='resultado-sec' border=1>";
      $response .="<tr class='tr-result' cellspacing='10'>";
      $response .="<td>Radicado</td>";
      $response .="<td>Periodo</td>";
      $response .="<td>Valor Nomina</td>";
      $response .="<td>Valor Consignada</td>";
      $response .="<td>Valor Interes</td>";
      $response .="<td>Trabajadores</td>";
      $response .="<td>Fecha Pago</td>";
      $response .="</tr>";
      $param = array("nit"=>Session::getDATA('documento'));
      $result = parent::webService("Planilla", $param);
      if($result!=false){
        foreach($result as $mresult){
          $fecpag = str_replace("12:00:00 AM","",$mresult['fecrec']);
          $response .="<tr>";
          $response .="<td>{$mresult['numrad']}</td>";
          $response .="<td>{$mresult['perapo']}</td>";
          $valnom = number_format(round($mresult['valnom']));
          $response .="<td>{$valnom}</td>";
          $valcon = number_format(round($mresult['valcon']));
          $response .="<td>{$valcon}</td>";
          $valint = number_format(round($mresult['valint']));
          $response .="<td>{$valint}</td>";
          $response .="<td>{$mresult['tottra']}</td>";
          $response .="<td>{$fecpag}</td>";
          $response .="</tr>";
        }        
      }
      echo $response;
    }

    public function pazysalvo_viewAction(){
      echo parent::showTitle('Certificado de Paz y Salvo');
      echo parent::showHelp('Mediante esta herramienta se puede generar el reporte de paz y salvo, según el estado actual de la empresa, con solo dar clic en el boton <strong>Generar Paz y salvo.</strong>');

    }
    
    public function pazysalvoAction(){
      $today = new Date();
      $title = "Certificado Paz y Salvo";
      $report = new UserReportPdf($title,array(),"P","A4");
      $report->startReport();
      $report->setX(15);
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Image('public/img/portal/comfaguajira.jpg',6,27,73,20);
      $report->Image('public/img/LogoSuperSubsi.png',198,245,12,35);
      $report->__MultiCell(0,4,"La Caja de Compensacion Familiar certifica que la empresa ".Session::getDATA("nombre")." Identificado(a) con el Nit No ".Session::getDATA('documento')." se encuentra a paz y salvo",0,"J",0);
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->setX(15);
      $report->__Cell(0,4,"Esta certificacion se expide en RIOHACHA a solicitud del interesado el dia {$today->getDay()} de {$today->getMonthName()} de {$today->getYear()}. ",0,0,"L",0,0);
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->Ln();
      $report->setX(25);
      $report->__Cell(50,4,"",0,0,"L",0,0);
      $report->__Cell(45,4,"","B",1,"L",0,0);
      $report->setX(25);
      $report->__Cell(50,4,"",0,0,"L",0,0);
      $report->__Cell(45,4,"LICETH RIVEIRA BARROS",0,1,"C",0,0);
      $report->setX(25);
      $report->__Cell(50,4,"",0,0,"L",0,0);
      $mercurio05 = $this->Mercurio05->findFirst("codcaj = '".Session::getDATA('codcaj')."' AND codfir = 'CSA'");
      $report->__Cell(45,4,$mercurio05->getCargo(),0,100,"C",0,0);
      if($mercurio05->getNomimg()!="") $report->Image("public/img/firmas/firmajefa.jpg",70,150,60,13);
      $file = "public/temp/reportes";
      echo $report->FinishReport($file);
      $this->setResponse('view');
    }

    public function adjuntobenAction(){
        $this->setResponse("ajax");
        $fecha = new Date();
        $codare = $this->getPostParam("codare");
        $codope = $this->getPostParam("codope");
        $coddoc = $this->getPostParam("coddoc");
        $fecnac = $this->getPostParam("fecnac");
        $difer = $fecha->diffDate($fecnac);
        $difano = $difer/365;
        $response = "";
        $mercurio13 = $this->Mercurio13->find("codcaj = '".SESSION::getDATA('codcaj')."' AND codare = '$codare' AND codope='$codope'");
        foreach($mercurio13 as $mmercurio13){
            if($difano < 7 || $difano > 19 ){
                if($mmercurio13->getCoddoc() == 13)continue;
            }
            if($difano < 60){
                if($mmercurio13->getCoddoc() == 14 || $mmercurio13->getCoddoc() == 15)continue;
            }
            $mercurio12 = $this->Mercurio12->findFirst("coddoc = '{$mmercurio13->getCoddoc()}'");
            $response .= "<tr>";
            $response .= " <td colspan='2' style='text-align: right;'><label>Archivo {$mercurio12->getDetalle()} (pdf):</label></td>";
            $response .= "<td colspan='2'>".Tag::fileField("archivo_{$mmercurio13->getCoddoc()}")."</td>";
            $response .= "</tr>";
        }
        $this->renderText(json_encode($response));
    }    

    public function consultaParticularAction(){
      echo parent::showTitle('Consulta de Estados de Afiliación'); 
      echo parent::showHelp('Esta opción le permite verificar en que estado se encuentra su proceso de afiliación.');
      $estado = array('A' => 'Aprobada', 'X' => 'Rechazada','P' => 'Pendiente');
      $mercurio30 = $this->Mercurio30->find('nit = "'.Session::getDATA('documento').'"');
      $response = "";
      $mercurio31 = $this->Mercurio31->find('nit = "'.Session::getDATA('documento').'"');
      $response .= "<h3 style='margin-left: 20px'>Afiliaciones Trabajador</h3>";
      $response .= "<div style='margin: 5px auto; width: 95%; height: 150px; overflow: auto; padding: 10px;'>";
      $response .= "<table border='1' cellpadding='2' class='resultado-sec'>";
      $response .= "<thead>";
      $response .= "<tr class='tr-result'>";
      $response .= "<th>No.</th>";
      $response .= "<th>C&eacute;dula</th>";
      $response .= "<th>Nombre</th>";
      $response .= "<th>Sexo</th>";
      $response .= "<th>Estado</th>";
      $response .= "<th>Motivo</th>";
      $response .= "</tr>";
      $response .= "</thead>";
      $response .= "<tbody>";
      $y = 1;
      foreach ($mercurio31 as $mmercurio31) {
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td>".$y++."</td>";
      	$response .= "<td>".Session::getDATA('documento')."</td>";
      	$response .= "<td>".$mmercurio31->getPrinom().$mmercurio31->getSegnom().$mmercurio31->getPriape().$mmercurio31->getSegape()."</td>";
      	$response .= "<td>".$mmercurio31->getSexo()."</td>";
      	$response .= "<td>".$estado[$mmercurio31->getEstado()]."</td>";
      	$response .= "<td>".$mmercurio31->getMotivo()."</td>";
      	$response .= "</tr>";
      }
      if($y==1){
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td colspan='6'>No tiene registros</td>";
      	$response .= "</tr>";
      } 
      $response .= "</tbody>";
      $response .= "</table>";
      $response .= "</div>";
      $response .= "<h3 style='margin-left: 20px'>Actualizacion de Datos Basicos </h3>";
      $response .= "<div style='margin: 2px auto; width: 95%; height: 150px; overflow: auto; padding: 10px;'>";
      $response .= "<table border='1' cellpadding='2' class='resultado-sec'>";
      $response .= "<tr class='tr-result'>";
      $response .= "<th>No.</th>";
      $response .= "<th>Nombre</th>";
      $response .= "<th>Campo</th>";
      $response .= "<th>Valor Cambiado</th>";
      $response .= "<th>Estado</th>";
      $response .= "<th>Motivo</th>";
      $response .= "</tr>";
      $response .= "<tbody>";
      $y = 1;
      $mercurio33 = $this->Mercurio33->find('documento = "'.Session::getDATA('documento').'"');
      foreach ($mercurio33 as $mmercurio33) {
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td>".$y++."</td>";
      	$response .= "<td>".Session::getDATA('nombre')."</td>";
      	$response .= "<td>".$mmercurio33->getCampo()."</td>";
      	$response .= "<td>".$mmercurio33->getValor()."</td>";
      	$response .= "<td>".$estado[$mmercurio33->getEstado()]."</td>";
      	$response .= "<td>".$mmercurio33->getMotivo()."</td>";
      	$response .= "</tr>";
      }
      if($y==1){
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td colspan='6'>No tiene registros</td>";
      	$response .= "</tr>";
      }

      $response .= "</table>";
      $response .= "</div>";
      $response .= "<h3 style='margin-left: 20px'>Novedades de Retiros</h3>";
      $response .= "<div style='margin: 2px auto; width: 95%; height: 150px; overflow: auto; padding: 10px;'>";
      $response .= "<table border='1' cellpadding='2' class='resultado-sec'>";
      $response .= "<tr class='tr-result'>";
      $response .= "<th>No.</th>";
      $response .= "<th>C&eacute;dula Trabajador</th>";
      $response .= "<th>Nombre</th>";
      $response .= "<th>Fecha de Retiro</th>";
      $response .= "<th>Motivo de Retiro</th>";
      $response .= "<th>Nota de Retiro </th>";
      $response .= "<th>Estado</th>";
      $response .= "<th>Motivo de no retiro</th>";
      $response .= "</tr>";
      $response .= "<tbody>";
      $y = 1;
      $mercurio35 = $this->Mercurio35->find('nit = "'.Session::getDATA('documento').'"');
      foreach ($mercurio35 as $mmercurio35) {
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td>".$y++."</td>";
      	$response .= "<td>".$mmercurio35->getCedtra()."</td>";
        $nit = $mmercurio35->getNit();
        $cedtra = $mmercurio35->getCedtra();
        $result = parent::webService("DatosTrabajador",array("nit"=>$nit ,"cedtra"=> $cedtra));
      	$response .= "<td>".$result[0]['nombre']."</td>";
      	$response .= "<td>".$mmercurio35->getFecret()."</td>";
      	$response .= "<td>".$mmercurio35->getCodest()."</td>";
      	$response .= "<td>".$mmercurio35->getNota()."</td>";
      	$response .= "<td>".$estado[$mmercurio35->getEstado()]."</td>";
      	$response .= "<td>".$mmercurio35->getMotivo()."</td>";
      	$response .= "</tr>";
      }
      if($y==1){
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td colspan='8'>No tiene registros</td>";
      	$response .= "</tr>";
      }

      $response .= "</table>";
      $response .= "</div>";
      $response .= "<h3 style='margin-left: 20px'>Cambio de Datos Principales</h3>";
      $response .= "<div style='margin: 2px auto; width: 95%; height: 150px; overflow: auto; padding: 10px;'>";
      $response .= "<table border='1' cellpadding='2' class='resultado-sec'>";
      $response .= "<tr class='tr-result'>";
      $response .= "<th>No.</th>";
      $response .= "<th>Nombre</th>";
      $response .= "<th>Campo</th>";
      $response .= "<th>Valor a Cambiar</th>";
      $response .= "<th>Estado</th>";
      $response .= "<th>Motivo de no retiro</th>";
      $response .= "</tr>";
      $response .= "<tbody>";
      $y = 1;
      $mercurio43 = $this->Mercurio43->find('documento = "'.Session::getDATA('documento').'"');
      foreach ($mercurio43 as $mmercurio43) {
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td>".$y++."</td>";
      	$response .= "<td>".Session::getData('nombre')."</td>";
      	$response .= "<td>".$mmercurio43->getCampo()."</td>";
      	$response .= "<td>".$mmercurio43->getValor()."</td>";
      	$response .= "<td>".$estado[$mmercurio35->getEstado()]."</td>";
      	$response .= "<td>".$mmercurio35->getMotivo()."</td>";
      	$response .= "</tr>";
      }
      if($y==1){
      	$response .= "<tr class='tr-res'>";
      	$response .= "<td colspan='6'>No tiene registros</td>";
      	$response .= "</tr>";
      }

      $response .= "</table>";
      $response .= "</div>";


      echo $response;
    }





 
}
?>
